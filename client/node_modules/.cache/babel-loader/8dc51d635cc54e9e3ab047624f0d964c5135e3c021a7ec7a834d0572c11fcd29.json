{"ast":null,"code":"import _slicedToArray from \"C:/NewPrac/Prac/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport useControlled from '@mui/utils/useControlled';\nimport useEventCallback from '@mui/utils/useEventCallback';\nexport var useRangePosition = function useRangePosition(props) {\n  var _props$defaultRangePo;\n  var singleInputFieldRef = React.useRef();\n  var _useControlled = useControlled({\n      name: 'useRangePosition',\n      state: 'rangePosition',\n      controlled: props.rangePosition,\n      default: (_props$defaultRangePo = props.defaultRangePosition) != null ? _props$defaultRangePo : 'start'\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    rangePosition = _useControlled2[0],\n    setRangePosition = _useControlled2[1];\n\n  // When using a single input field,\n  // we want to select the 1st section of the edited date when updating the range position.\n  var syncRangePositionWithSingleInputField = function syncRangePositionWithSingleInputField(newRangePosition) {\n    if (singleInputFieldRef.current == null) {\n      return;\n    }\n    var sections = singleInputFieldRef.current.getSections();\n    var targetActiveSectionIndex = newRangePosition === 'start' ? 0 : sections.length / 2;\n    singleInputFieldRef.current.setSelectedSections(targetActiveSectionIndex);\n  };\n  var handleRangePositionChange = useEventCallback(function (newRangePosition) {\n    var _props$onRangePositio;\n    setRangePosition(newRangePosition);\n    (_props$onRangePositio = props.onRangePositionChange) == null || _props$onRangePositio.call(props, newRangePosition);\n    syncRangePositionWithSingleInputField(newRangePosition);\n  });\n  return {\n    rangePosition: rangePosition,\n    onRangePositionChange: handleRangePositionChange,\n    singleInputFieldRef: singleInputFieldRef\n  };\n};","map":{"version":3,"names":["React","useControlled","useEventCallback","useRangePosition","props","_props$defaultRangePo","singleInputFieldRef","useRef","_useControlled","name","state","controlled","rangePosition","default","defaultRangePosition","_useControlled2","_slicedToArray","setRangePosition","syncRangePositionWithSingleInputField","newRangePosition","current","sections","getSections","targetActiveSectionIndex","length","setSelectedSections","handleRangePositionChange","_props$onRangePositio","onRangePositionChange","call"],"sources":["C:/NewPrac/Prac/client/node_modules/@mui/x-date-pickers-pro/internals/hooks/useRangePosition.js"],"sourcesContent":["import * as React from 'react';\nimport useControlled from '@mui/utils/useControlled';\nimport useEventCallback from '@mui/utils/useEventCallback';\nexport const useRangePosition = props => {\n  var _props$defaultRangePo;\n  const singleInputFieldRef = React.useRef();\n  const [rangePosition, setRangePosition] = useControlled({\n    name: 'useRangePosition',\n    state: 'rangePosition',\n    controlled: props.rangePosition,\n    default: (_props$defaultRangePo = props.defaultRangePosition) != null ? _props$defaultRangePo : 'start'\n  });\n\n  // When using a single input field,\n  // we want to select the 1st section of the edited date when updating the range position.\n  const syncRangePositionWithSingleInputField = newRangePosition => {\n    if (singleInputFieldRef.current == null) {\n      return;\n    }\n    const sections = singleInputFieldRef.current.getSections();\n    const targetActiveSectionIndex = newRangePosition === 'start' ? 0 : sections.length / 2;\n    singleInputFieldRef.current.setSelectedSections(targetActiveSectionIndex);\n  };\n  const handleRangePositionChange = useEventCallback(newRangePosition => {\n    var _props$onRangePositio;\n    setRangePosition(newRangePosition);\n    (_props$onRangePositio = props.onRangePositionChange) == null || _props$onRangePositio.call(props, newRangePosition);\n    syncRangePositionWithSingleInputField(newRangePosition);\n  });\n  return {\n    rangePosition,\n    onRangePositionChange: handleRangePositionChange,\n    singleInputFieldRef\n  };\n};"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGC,KAAK,EAAI;EACvC,IAAIC,qBAAqB;EACzB,IAAMC,mBAAmB,GAAGN,KAAK,CAACO,MAAM,CAAC,CAAC;EAC1C,IAAAC,cAAA,GAA0CP,aAAa,CAAC;MACtDQ,IAAI,EAAE,kBAAkB;MACxBC,KAAK,EAAE,eAAe;MACtBC,UAAU,EAAEP,KAAK,CAACQ,aAAa;MAC/BC,OAAO,EAAE,CAACR,qBAAqB,GAAGD,KAAK,CAACU,oBAAoB,KAAK,IAAI,GAAGT,qBAAqB,GAAG;IAClG,CAAC,CAAC;IAAAU,eAAA,GAAAC,cAAA,CAAAR,cAAA;IALKI,aAAa,GAAAG,eAAA;IAAEE,gBAAgB,GAAAF,eAAA;;EAOtC;EACA;EACA,IAAMG,qCAAqC,GAAG,SAAxCA,qCAAqCA,CAAGC,gBAAgB,EAAI;IAChE,IAAIb,mBAAmB,CAACc,OAAO,IAAI,IAAI,EAAE;MACvC;IACF;IACA,IAAMC,QAAQ,GAAGf,mBAAmB,CAACc,OAAO,CAACE,WAAW,CAAC,CAAC;IAC1D,IAAMC,wBAAwB,GAAGJ,gBAAgB,KAAK,OAAO,GAAG,CAAC,GAAGE,QAAQ,CAACG,MAAM,GAAG,CAAC;IACvFlB,mBAAmB,CAACc,OAAO,CAACK,mBAAmB,CAACF,wBAAwB,CAAC;EAC3E,CAAC;EACD,IAAMG,yBAAyB,GAAGxB,gBAAgB,CAAC,UAAAiB,gBAAgB,EAAI;IACrE,IAAIQ,qBAAqB;IACzBV,gBAAgB,CAACE,gBAAgB,CAAC;IAClC,CAACQ,qBAAqB,GAAGvB,KAAK,CAACwB,qBAAqB,KAAK,IAAI,IAAID,qBAAqB,CAACE,IAAI,CAACzB,KAAK,EAAEe,gBAAgB,CAAC;IACpHD,qCAAqC,CAACC,gBAAgB,CAAC;EACzD,CAAC,CAAC;EACF,OAAO;IACLP,aAAa,EAAbA,aAAa;IACbgB,qBAAqB,EAAEF,yBAAyB;IAChDpB,mBAAmB,EAAnBA;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}