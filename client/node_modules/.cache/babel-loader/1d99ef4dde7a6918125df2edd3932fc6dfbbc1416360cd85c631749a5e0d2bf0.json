{"ast":null,"code":"import * as React from 'react';\nimport useControlled from '@mui/utils/useControlled';\nimport useEventCallback from '@mui/utils/useEventCallback';\nexport const useRangePosition = props => {\n  var _props$defaultRangePo;\n  const singleInputFieldRef = React.useRef();\n  const [rangePosition, setRangePosition] = useControlled({\n    name: 'useRangePosition',\n    state: 'rangePosition',\n    controlled: props.rangePosition,\n    default: (_props$defaultRangePo = props.defaultRangePosition) != null ? _props$defaultRangePo : 'start'\n  });\n\n  // When using a single input field,\n  // we want to select the 1st section of the edited date when updating the range position.\n  const syncRangePositionWithSingleInputField = newRangePosition => {\n    if (singleInputFieldRef.current == null) {\n      return;\n    }\n    const sections = singleInputFieldRef.current.getSections();\n    const targetActiveSectionIndex = newRangePosition === 'start' ? 0 : sections.length / 2;\n    singleInputFieldRef.current.setSelectedSections(targetActiveSectionIndex);\n  };\n  const handleRangePositionChange = useEventCallback(newRangePosition => {\n    var _props$onRangePositio;\n    setRangePosition(newRangePosition);\n    (_props$onRangePositio = props.onRangePositionChange) == null || _props$onRangePositio.call(props, newRangePosition);\n    syncRangePositionWithSingleInputField(newRangePosition);\n  });\n  return {\n    rangePosition,\n    onRangePositionChange: handleRangePositionChange,\n    singleInputFieldRef\n  };\n};","map":{"version":3,"names":["React","useControlled","useEventCallback","useRangePosition","props","_props$defaultRangePo","singleInputFieldRef","useRef","rangePosition","setRangePosition","name","state","controlled","default","defaultRangePosition","syncRangePositionWithSingleInputField","newRangePosition","current","sections","getSections","targetActiveSectionIndex","length","setSelectedSections","handleRangePositionChange","_props$onRangePositio","onRangePositionChange","call"],"sources":["C:/NewPrac/Prac/client/node_modules/@mui/x-date-pickers-pro/internals/hooks/useRangePosition.js"],"sourcesContent":["import * as React from 'react';\nimport useControlled from '@mui/utils/useControlled';\nimport useEventCallback from '@mui/utils/useEventCallback';\nexport const useRangePosition = props => {\n  var _props$defaultRangePo;\n  const singleInputFieldRef = React.useRef();\n  const [rangePosition, setRangePosition] = useControlled({\n    name: 'useRangePosition',\n    state: 'rangePosition',\n    controlled: props.rangePosition,\n    default: (_props$defaultRangePo = props.defaultRangePosition) != null ? _props$defaultRangePo : 'start'\n  });\n\n  // When using a single input field,\n  // we want to select the 1st section of the edited date when updating the range position.\n  const syncRangePositionWithSingleInputField = newRangePosition => {\n    if (singleInputFieldRef.current == null) {\n      return;\n    }\n    const sections = singleInputFieldRef.current.getSections();\n    const targetActiveSectionIndex = newRangePosition === 'start' ? 0 : sections.length / 2;\n    singleInputFieldRef.current.setSelectedSections(targetActiveSectionIndex);\n  };\n  const handleRangePositionChange = useEventCallback(newRangePosition => {\n    var _props$onRangePositio;\n    setRangePosition(newRangePosition);\n    (_props$onRangePositio = props.onRangePositionChange) == null || _props$onRangePositio.call(props, newRangePosition);\n    syncRangePositionWithSingleInputField(newRangePosition);\n  });\n  return {\n    rangePosition,\n    onRangePositionChange: handleRangePositionChange,\n    singleInputFieldRef\n  };\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAO,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;EACvC,IAAIC,qBAAqB;EACzB,MAAMC,mBAAmB,GAAGN,KAAK,CAACO,MAAM,CAAC,CAAC;EAC1C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,aAAa,CAAC;IACtDS,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,eAAe;IACtBC,UAAU,EAAER,KAAK,CAACI,aAAa;IAC/BK,OAAO,EAAE,CAACR,qBAAqB,GAAGD,KAAK,CAACU,oBAAoB,KAAK,IAAI,GAAGT,qBAAqB,GAAG;EAClG,CAAC,CAAC;;EAEF;EACA;EACA,MAAMU,qCAAqC,GAAGC,gBAAgB,IAAI;IAChE,IAAIV,mBAAmB,CAACW,OAAO,IAAI,IAAI,EAAE;MACvC;IACF;IACA,MAAMC,QAAQ,GAAGZ,mBAAmB,CAACW,OAAO,CAACE,WAAW,CAAC,CAAC;IAC1D,MAAMC,wBAAwB,GAAGJ,gBAAgB,KAAK,OAAO,GAAG,CAAC,GAAGE,QAAQ,CAACG,MAAM,GAAG,CAAC;IACvFf,mBAAmB,CAACW,OAAO,CAACK,mBAAmB,CAACF,wBAAwB,CAAC;EAC3E,CAAC;EACD,MAAMG,yBAAyB,GAAGrB,gBAAgB,CAACc,gBAAgB,IAAI;IACrE,IAAIQ,qBAAqB;IACzBf,gBAAgB,CAACO,gBAAgB,CAAC;IAClC,CAACQ,qBAAqB,GAAGpB,KAAK,CAACqB,qBAAqB,KAAK,IAAI,IAAID,qBAAqB,CAACE,IAAI,CAACtB,KAAK,EAAEY,gBAAgB,CAAC;IACpHD,qCAAqC,CAACC,gBAAgB,CAAC;EACzD,CAAC,CAAC;EACF,OAAO;IACLR,aAAa;IACbiB,qBAAqB,EAAEF,yBAAyB;IAChDjB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}