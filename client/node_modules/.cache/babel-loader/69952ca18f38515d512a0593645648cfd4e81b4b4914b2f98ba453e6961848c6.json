{"ast":null,"code":"import _slicedToArray from \"C:/NewPrac/Prac/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/NewPrac/Prac/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"value\", \"defaultValue\", \"referenceDate\", \"onChange\", \"className\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"shouldDisableDate\", \"reduceAnimations\", \"onMonthChange\", \"defaultCalendarMonth\", \"rangePosition\", \"defaultRangePosition\", \"onRangePositionChange\", \"calendars\", \"currentMonthCalendarPosition\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"disableHighlightToday\", \"readOnly\", \"disabled\", \"showDaysOutsideCurrentMonth\", \"dayOfWeekFormatter\", \"disableAutoMonthSwitching\", \"autoFocus\", \"fixedWeekNumber\", \"disableDragEditing\", \"displayWeekNumber\", \"timezone\"],\n  _excluded2 = [\"isDragging\", \"rangeDragDay\", \"draggingDatePosition\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { resolveComponentProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { Watermark } from '@mui/x-license-pro';\nimport { PickersCalendarHeader } from '@mui/x-date-pickers/PickersCalendarHeader';\nimport { applyDefaultDate, DAY_MARGIN, DayCalendar, useDefaultReduceAnimations, PickersArrowSwitcher, useCalendarState, useDefaultDates, useLocaleText, useNextMonthDisabled, usePreviousMonthDisabled, useUtils, useNow, uncapitalizeObjectKeys, DEFAULT_DESKTOP_MODE_MEDIA_QUERY, buildWarning, useControlledValueWithTimezone } from '@mui/x-date-pickers/internals';\nimport { getReleaseInfo } from '../internals/utils/releaseInfo';\nimport { dateRangeCalendarClasses, getDateRangeCalendarUtilityClass } from './dateRangeCalendarClasses';\nimport { isEndOfRange, isRangeValid, isStartOfRange, isWithinRange } from '../internals/utils/date-utils';\nimport { calculateRangeChange, calculateRangePreview } from '../internals/utils/date-range-manager';\nimport { DateRangePickerDay, dateRangePickerDayClasses as dayClasses } from '../DateRangePickerDay';\nimport { rangeValueManager } from '../internals/utils/valueManagers';\nimport { useDragRange } from './useDragRange';\nimport { useRangePosition } from '../internals/hooks/useRangePosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar releaseInfo = getReleaseInfo();\nvar DateRangeCalendarRoot = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(_, styles) {\n    return styles.root;\n  }\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nvar DateRangeCalendarMonthContainer = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Container',\n  overridesResolver: function overridesResolver(_, styles) {\n    return styles.monthContainer;\n  }\n})(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    '&:not(:last-of-type)': {\n      borderRight: \"1px solid \".concat((theme.vars || theme).palette.divider)\n    }\n  };\n});\nvar DateRangeCalendarArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\nvar DAY_RANGE_SIZE = 40;\nvar weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nvar warnInvalidCurrentMonthCalendarPosition = buildWarning(['The `currentMonthCalendarPosition` prop must be an integer between `1` and the amount of calendars rendered.', 'For example if you have 2 calendars rendered, it should be equal to either 1 or 2.']);\nvar DayCalendarForRange = styled(DayCalendar)(function (_ref2) {\n  var _$concat, _ref3;\n  var theme = _ref2.theme;\n  return _ref3 = {\n    minWidth: 312,\n    minHeight: weeksContainerHeight\n  }, _defineProperty(_ref3, \"&.\".concat(dateRangeCalendarClasses.dayDragging), (_$concat = {}, _defineProperty(_$concat, \"& .\".concat(dayClasses.day), {\n    cursor: 'grabbing'\n  }), _defineProperty(_$concat, \"& .\".concat(dayClasses.root, \":not(.\").concat(dayClasses.rangeIntervalDayHighlightStart, \"):not(.\").concat(dayClasses.rangeIntervalDayHighlightEnd, \") .\").concat(dayClasses.day, \":not(.\").concat(dayClasses.notSelectedDate, \")\"), {\n    // we can't override `PickersDay` background color here, because it's styles take precedence\n    opacity: 0.6\n  }), _$concat)), _defineProperty(_ref3, \"&:not(.\".concat(dateRangeCalendarClasses.dayDragging, \") .\").concat(dayClasses.dayOutsideRangeInterval), {\n    '@media (pointer: fine)': {\n      '&:hover': {\n        border: \"1px solid \".concat((theme.vars || theme).palette.grey[500])\n      }\n    }\n  }), _ref3;\n});\nfunction useDateRangeCalendarDefaultizedProps(props, name) {\n  var _themeProps$renderLoa, _themeProps$reduceAni, _props$loading, _props$disablePast, _props$disableFuture, _themeProps$calendars, _themeProps$disableDr;\n  var utils = useUtils();\n  var defaultDates = useDefaultDates();\n  var defaultReduceAnimations = useDefaultReduceAnimations();\n  var themeProps = useThemeProps({\n    props: props,\n    name: name\n  });\n  return _extends({}, themeProps, {\n    renderLoading: (_themeProps$renderLoa = themeProps.renderLoading) != null ? _themeProps$renderLoa : function () {\n      return /*#__PURE__*/_jsx(\"span\", {\n        children: \"...\"\n      });\n    },\n    reduceAnimations: (_themeProps$reduceAni = themeProps.reduceAnimations) != null ? _themeProps$reduceAni : defaultReduceAnimations,\n    loading: (_props$loading = props.loading) != null ? _props$loading : false,\n    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,\n    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    calendars: (_themeProps$calendars = themeProps.calendars) != null ? _themeProps$calendars : 2,\n    disableDragEditing: (_themeProps$disableDr = themeProps.disableDragEditing) != null ? _themeProps$disableDr : false\n  });\n}\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n    isDragging = ownerState.isDragging;\n  var slots = {\n    root: ['root'],\n    monthContainer: ['monthContainer'],\n    dayCalendar: [isDragging && 'dayDragging']\n  };\n  return composeClasses(slots, getDateRangeCalendarUtilityClass, classes);\n};\nvar DateRangeCalendar = /*#__PURE__*/React.forwardRef(function DateRangeCalendar(inProps, ref) {\n  var props = useDateRangeCalendarDefaultizedProps(inProps, 'MuiDateRangeCalendar');\n  var shouldHavePreview = useMediaQuery(DEFAULT_DESKTOP_MODE_MEDIA_QUERY, {\n    defaultMatches: false\n  });\n  var valueProp = props.value,\n    defaultValue = props.defaultValue,\n    referenceDate = props.referenceDate,\n    onChange = props.onChange,\n    className = props.className,\n    disableFuture = props.disableFuture,\n    disablePast = props.disablePast,\n    minDate = props.minDate,\n    maxDate = props.maxDate,\n    shouldDisableDate = props.shouldDisableDate,\n    reduceAnimations = props.reduceAnimations,\n    onMonthChange = props.onMonthChange,\n    defaultCalendarMonth = props.defaultCalendarMonth,\n    rangePositionProp = props.rangePosition,\n    inDefaultRangePosition = props.defaultRangePosition,\n    inOnRangePositionChange = props.onRangePositionChange,\n    calendars = props.calendars,\n    _props$currentMonthCa = props.currentMonthCalendarPosition,\n    currentMonthCalendarPosition = _props$currentMonthCa === void 0 ? 1 : _props$currentMonthCa,\n    components = props.components,\n    componentsProps = props.componentsProps,\n    innerSlots = props.slots,\n    innerSlotProps = props.slotProps,\n    loading = props.loading,\n    renderLoading = props.renderLoading,\n    disableHighlightToday = props.disableHighlightToday,\n    readOnly = props.readOnly,\n    disabled = props.disabled,\n    showDaysOutsideCurrentMonth = props.showDaysOutsideCurrentMonth,\n    dayOfWeekFormatter = props.dayOfWeekFormatter,\n    disableAutoMonthSwitching = props.disableAutoMonthSwitching,\n    autoFocus = props.autoFocus,\n    fixedWeekNumber = props.fixedWeekNumber,\n    disableDragEditing = props.disableDragEditing,\n    displayWeekNumber = props.displayWeekNumber,\n    timezoneProp = props.timezone,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useControlledValueWi = useControlledValueWithTimezone({\n      name: 'DateRangeCalendar',\n      timezone: timezoneProp,\n      value: valueProp,\n      defaultValue: defaultValue,\n      onChange: onChange,\n      valueManager: rangeValueManager\n    }),\n    value = _useControlledValueWi.value,\n    handleValueChange = _useControlledValueWi.handleValueChange,\n    timezone = _useControlledValueWi.timezone;\n  var utils = useUtils();\n  var localeText = useLocaleText();\n  var now = useNow(timezone);\n  var slots = innerSlots != null ? innerSlots : uncapitalizeObjectKeys(components);\n  var slotProps = innerSlotProps != null ? innerSlotProps : componentsProps;\n  var _useRangePosition = useRangePosition({\n      rangePosition: rangePositionProp,\n      defaultRangePosition: inDefaultRangePosition,\n      onRangePositionChange: inOnRangePositionChange\n    }),\n    rangePosition = _useRangePosition.rangePosition,\n    onRangePositionChange = _useRangePosition.onRangePositionChange;\n  var handleDatePositionChange = useEventCallback(function (position) {\n    if (rangePosition !== position) {\n      onRangePositionChange(position);\n    }\n  });\n  var handleSelectedDayChange = useEventCallback(function (newDate, selectionState) {\n    var allowRangeFlip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _calculateRangeChange = calculateRangeChange({\n        newDate: newDate,\n        utils: utils,\n        range: value,\n        rangePosition: rangePosition,\n        allowRangeFlip: allowRangeFlip\n      }),\n      nextSelection = _calculateRangeChange.nextSelection,\n      newRange = _calculateRangeChange.newRange;\n    onRangePositionChange(nextSelection);\n    var isFullRangeSelected = rangePosition === 'end' && isRangeValid(utils, newRange);\n    handleValueChange(newRange, isFullRangeSelected ? 'finish' : 'partial');\n  });\n  var handleDrop = useEventCallback(function (newDate) {\n    handleSelectedDayChange(newDate, undefined, true);\n  });\n  var shouldDisableDragEditing = disableDragEditing || disabled || readOnly;\n\n  // Range going for the start of the start day to the end of the end day.\n  // This makes sure that `isWithinRange` works with any time in the start and end day.\n  var valueDayRange = React.useMemo(function () {\n    return [value[0] == null || !utils.isValid(value[0]) ? value[0] : utils.startOfDay(value[0]), value[1] == null || !utils.isValid(value[1]) ? value[1] : utils.endOfDay(value[1])];\n  }, [value, utils]);\n  var _useDragRange = useDragRange({\n      disableDragEditing: shouldDisableDragEditing,\n      onDrop: handleDrop,\n      onDatePositionChange: handleDatePositionChange,\n      utils: utils,\n      dateRange: valueDayRange,\n      timezone: timezone\n    }),\n    isDragging = _useDragRange.isDragging,\n    rangeDragDay = _useDragRange.rangeDragDay,\n    draggingDatePosition = _useDragRange.draggingDatePosition,\n    dragEventHandlers = _objectWithoutPropertiesLoose(_useDragRange, _excluded2);\n  var ownerState = _extends({}, props, {\n    isDragging: isDragging\n  });\n  var classes = useUtilityClasses(ownerState);\n  var draggingRange = React.useMemo(function () {\n    if (!valueDayRange[0] || !valueDayRange[1] || !rangeDragDay) {\n      return [null, null];\n    }\n    var newRange = calculateRangeChange({\n      utils: utils,\n      range: valueDayRange,\n      newDate: rangeDragDay,\n      rangePosition: rangePosition,\n      allowRangeFlip: true\n    }).newRange;\n    return newRange[0] !== null && newRange[1] !== null ? [utils.startOfDay(newRange[0]), utils.endOfDay(newRange[1])] : newRange;\n  }, [rangePosition, rangeDragDay, utils, valueDayRange]);\n  var wrappedShouldDisableDate = React.useMemo(function () {\n    if (!shouldDisableDate) {\n      return undefined;\n    }\n    return function (dayToTest) {\n      return shouldDisableDate(dayToTest, draggingDatePosition || rangePosition);\n    };\n  }, [shouldDisableDate, rangePosition, draggingDatePosition]);\n  var _useCalendarState = useCalendarState({\n      value: value[0] || value[1],\n      referenceDate: referenceDate,\n      defaultCalendarMonth: defaultCalendarMonth,\n      disableFuture: disableFuture,\n      disablePast: disablePast,\n      disableSwitchToMonthOnDayFocus: true,\n      maxDate: maxDate,\n      minDate: minDate,\n      onMonthChange: onMonthChange,\n      reduceAnimations: reduceAnimations,\n      shouldDisableDate: wrappedShouldDisableDate,\n      timezone: timezone\n    }),\n    calendarState = _useCalendarState.calendarState,\n    changeFocusedDay = _useCalendarState.changeFocusedDay,\n    changeMonth = _useCalendarState.changeMonth,\n    handleChangeMonth = _useCalendarState.handleChangeMonth,\n    onMonthSwitchingAnimationEnd = _useCalendarState.onMonthSwitchingAnimationEnd;\n  var prevValue = React.useRef(null);\n  React.useEffect(function () {\n    var _prevValue$current, _prevValue$current2;\n    var date = rangePosition === 'start' ? value[0] : value[1];\n    if (!date || !utils.isValid(date)) {\n      return;\n    }\n    var prevDate = rangePosition === 'start' ? (_prevValue$current = prevValue.current) == null ? void 0 : _prevValue$current[0] : (_prevValue$current2 = prevValue.current) == null ? void 0 : _prevValue$current2[1];\n    prevValue.current = value;\n\n    // The current date did not change, this call comes either from a `rangePosition` change or a change in the other date.\n    // In both cases, we don't want to change the visible month(s).\n    if (disableAutoMonthSwitching && prevDate && utils.isEqual(prevDate, date)) {\n      return;\n    }\n    var displayingMonthRange = calendars - 1;\n    var currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    var requestedMonthNumber = utils.getMonth(date);\n    if (!utils.isSameYear(calendarState.currentMonth, date) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      var newMonth = rangePosition === 'start' ? date :\n      // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(date, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  }, [rangePosition, value]); // eslint-disable-line\n\n  var selectNextMonth = React.useCallback(function () {\n    changeMonth(utils.addMonths(calendarState.currentMonth, 1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  var selectPreviousMonth = React.useCallback(function () {\n    changeMonth(utils.addMonths(calendarState.currentMonth, -1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  var isNextMonthDisabled = useNextMonthDisabled(calendarState.currentMonth, {\n    disableFuture: disableFuture,\n    maxDate: maxDate,\n    timezone: timezone\n  });\n  var isPreviousMonthDisabled = usePreviousMonthDisabled(calendarState.currentMonth, {\n    disablePast: disablePast,\n    minDate: minDate,\n    timezone: timezone\n  });\n  var baseDateValidationProps = {\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    maxDate: maxDate,\n    minDate: minDate\n  };\n  var commonViewProps = {\n    disableHighlightToday: disableHighlightToday,\n    readOnly: readOnly,\n    disabled: disabled\n  };\n\n  // When disabled, limit the view to the selected date\n  var minDateWithDisabled = disabled && value[0] || minDate;\n  var maxDateWithDisabled = disabled && value[1] || maxDate;\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    rangePreviewDay = _React$useState2[0],\n    setRangePreviewDay = _React$useState2[1];\n  var CalendarTransitionProps = React.useMemo(function () {\n    return {\n      onMouseLeave: function onMouseLeave() {\n        return setRangePreviewDay(null);\n      }\n    };\n  }, []);\n  var previewingRange = calculateRangePreview({\n    utils: utils,\n    range: valueDayRange,\n    newDate: rangePreviewDay,\n    rangePosition: rangePosition\n  });\n  var handleDayMouseEnter = useEventCallback(function (event, newPreviewRequest) {\n    if (!isWithinRange(utils, newPreviewRequest, valueDayRange)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  });\n  var slotsForDayCalendar = _extends({\n    day: DateRangePickerDay\n  }, slots);\n  var slotPropsForDayCalendar = _extends({}, slotProps, {\n    day: function day(dayOwnerState) {\n      var _resolveComponentProp;\n      var day = dayOwnerState.day;\n      var isSelectedStartDate = isStartOfRange(utils, day, valueDayRange);\n      var isSelectedEndDate = isEndOfRange(utils, day, valueDayRange);\n      var shouldInitDragging = !shouldDisableDragEditing && valueDayRange[0] && valueDayRange[1];\n      var isElementDraggable = shouldInitDragging && (isSelectedStartDate || isSelectedEndDate);\n      var datePosition;\n      if (isSelectedStartDate) {\n        datePosition = 'start';\n      } else if (isSelectedEndDate) {\n        datePosition = 'end';\n      }\n      var isStartOfHighlighting = isDragging ? isStartOfRange(utils, day, draggingRange) : isSelectedStartDate;\n      var isEndOfHighlighting = isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate;\n      return _extends({\n        isPreviewing: shouldHavePreview ? isWithinRange(utils, day, previewingRange) : false,\n        isStartOfPreviewing: shouldHavePreview ? isStartOfRange(utils, day, previewingRange) : false,\n        isEndOfPreviewing: shouldHavePreview ? isEndOfRange(utils, day, previewingRange) : false,\n        isHighlighting: isWithinRange(utils, day, isDragging ? draggingRange : valueDayRange),\n        isStartOfHighlighting: isStartOfHighlighting,\n        isEndOfHighlighting: isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate,\n        onMouseEnter: shouldHavePreview ? handleDayMouseEnter : undefined,\n        // apply selected styling to the dragging start or end day\n        isVisuallySelected: dayOwnerState.selected || isDragging && (isStartOfHighlighting || isEndOfHighlighting),\n        'data-position': datePosition\n      }, dragEventHandlers, {\n        draggable: isElementDraggable ? true : undefined\n      }, (_resolveComponentProp = resolveComponentProps(slotProps == null ? void 0 : slotProps.day, dayOwnerState)) != null ? _resolveComponentProp : {});\n    }\n  });\n  var calendarMonths = React.useMemo(function () {\n    return Array.from({\n      length: calendars\n    }).map(function (_, index) {\n      return index;\n    });\n  }, [calendars]);\n  var visibleMonths = React.useMemo(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (currentMonthCalendarPosition > calendars || currentMonthCalendarPosition < 1) {\n        warnInvalidCurrentMonthCalendarPosition();\n      }\n    }\n    var firstMonth = utils.addMonths(calendarState.currentMonth, 1 - currentMonthCalendarPosition);\n    return Array.from({\n      length: calendars\n    }).map(function (_, index) {\n      return utils.addMonths(firstMonth, index);\n    });\n  }, [utils, calendarState.currentMonth, calendars, currentMonthCalendarPosition]);\n  var focusedMonth = React.useMemo(function () {\n    var _visibleMonths$find;\n    if (!autoFocus) {\n      return null;\n    }\n\n    // The focus priority of the \"day\" view is as follows:\n    // 1. Month of the `start` date\n    // 2. Month of the `end` date\n    // 3. Month of the current date\n    // 4. First visible month\n\n    if (value[0] != null) {\n      return visibleMonths.find(function (month) {\n        return utils.isSameMonth(month, value[0]);\n      });\n    }\n    if (value[1] != null) {\n      return visibleMonths.find(function (month) {\n        return utils.isSameMonth(month, value[1]);\n      });\n    }\n    return (_visibleMonths$find = visibleMonths.find(function (month) {\n      return utils.isSameMonth(month, now);\n    })) != null ? _visibleMonths$find : visibleMonths[0];\n  }, [utils, value, visibleMonths, autoFocus, now]);\n  return /*#__PURE__*/_jsxs(DateRangeCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(Watermark, {\n      packageName: \"x-date-pickers-pro\",\n      releaseInfo: releaseInfo\n    }), calendarMonths.map(function (month, index) {\n      return /*#__PURE__*/_jsxs(DateRangeCalendarMonthContainer, {\n        className: classes.monthContainer,\n        children: [calendars === 1 ? /*#__PURE__*/_jsx(PickersCalendarHeader, {\n          views: ['day'],\n          view: 'day',\n          currentMonth: calendarState.currentMonth,\n          onMonthChange: function onMonthChange(newMonth, direction) {\n            return handleChangeMonth({\n              newMonth: newMonth,\n              direction: direction\n            });\n          },\n          minDate: minDateWithDisabled,\n          maxDate: maxDateWithDisabled,\n          disabled: disabled,\n          disablePast: disablePast,\n          disableFuture: disableFuture,\n          reduceAnimations: reduceAnimations,\n          slots: slots,\n          slotProps: slotProps,\n          timezone: timezone\n        }) : /*#__PURE__*/_jsx(DateRangeCalendarArrowSwitcher, {\n          onGoToPrevious: selectPreviousMonth,\n          onGoToNext: selectNextMonth,\n          isPreviousHidden: index !== 0,\n          isPreviousDisabled: isPreviousMonthDisabled,\n          previousLabel: localeText.previousMonth,\n          isNextHidden: index !== calendars - 1,\n          isNextDisabled: isNextMonthDisabled,\n          nextLabel: localeText.nextMonth,\n          slots: slots,\n          slotProps: slotProps,\n          children: utils.format(visibleMonths[month], 'monthAndYear')\n        }), /*#__PURE__*/_jsx(DayCalendarForRange, _extends({\n          className: classes.dayCalendar\n        }, calendarState, baseDateValidationProps, commonViewProps, {\n          onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n          onFocusedDayChange: changeFocusedDay,\n          reduceAnimations: reduceAnimations,\n          selectedDays: value,\n          onSelectedDaysChange: handleSelectedDayChange,\n          currentMonth: visibleMonths[month],\n          TransitionProps: CalendarTransitionProps,\n          shouldDisableDate: wrappedShouldDisableDate,\n          showDaysOutsideCurrentMonth: calendars === 1 && showDaysOutsideCurrentMonth,\n          dayOfWeekFormatter: dayOfWeekFormatter,\n          loading: loading,\n          renderLoading: renderLoading,\n          slots: slotsForDayCalendar,\n          slotProps: slotPropsForDayCalendar,\n          autoFocus: month === focusedMonth,\n          fixedWeekNumber: fixedWeekNumber,\n          displayWeekNumber: displayWeekNumber,\n          timezone: timezone\n        }), index)]\n      }, month);\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangeCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The number of calendars to render.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Position the current month is rendered in.\n   * @default 1\n   */\n  currentMonthCalendarPosition: PropTypes.oneOf([1, 2, 3]),\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value={[null, null]}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The initial position in the edited date range.\n   * Used when the component is not controlled.\n   * @default 'start'\n   */\n  defaultRangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, editing dates by dragging is disabled.\n   * @default false\n   */\n  disableDragEditing: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Callback fired when the value changes.\n   * @template TDate\n   * @param {DateRange<TDate>} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date range selection is complete.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the range position changes.\n   * @param {RangePosition} rangePosition The new range position.\n   */\n  onRangePositionChange: PropTypes.func,\n  /**\n   * The position in the currently edited date range.\n   * Used when the component position is controlled.\n   */\n  rangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => \"...\"\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.any)\n} : void 0;\nexport { DateRangeCalendar };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","clsx","useEventCallback","useMediaQuery","resolveComponentProps","styled","useThemeProps","unstable_composeClasses","composeClasses","Watermark","PickersCalendarHeader","applyDefaultDate","DAY_MARGIN","DayCalendar","useDefaultReduceAnimations","PickersArrowSwitcher","useCalendarState","useDefaultDates","useLocaleText","useNextMonthDisabled","usePreviousMonthDisabled","useUtils","useNow","uncapitalizeObjectKeys","DEFAULT_DESKTOP_MODE_MEDIA_QUERY","buildWarning","useControlledValueWithTimezone","getReleaseInfo","dateRangeCalendarClasses","getDateRangeCalendarUtilityClass","isEndOfRange","isRangeValid","isStartOfRange","isWithinRange","calculateRangeChange","calculateRangePreview","DateRangePickerDay","dateRangePickerDayClasses","dayClasses","rangeValueManager","useDragRange","useRangePosition","jsx","_jsx","jsxs","_jsxs","releaseInfo","DateRangeCalendarRoot","name","slot","overridesResolver","_","styles","root","display","flexDirection","DateRangeCalendarMonthContainer","monthContainer","_ref","theme","borderRight","concat","vars","palette","divider","DateRangeCalendarArrowSwitcher","padding","alignItems","justifyContent","DAY_RANGE_SIZE","weeksContainerHeight","warnInvalidCurrentMonthCalendarPosition","DayCalendarForRange","_ref2","_$concat","_ref3","minWidth","minHeight","_defineProperty","dayDragging","day","cursor","rangeIntervalDayHighlightStart","rangeIntervalDayHighlightEnd","notSelectedDate","opacity","dayOutsideRangeInterval","border","grey","useDateRangeCalendarDefaultizedProps","props","_themeProps$renderLoa","_themeProps$reduceAni","_props$loading","_props$disablePast","_props$disableFuture","_themeProps$calendars","_themeProps$disableDr","utils","defaultDates","defaultReduceAnimations","themeProps","renderLoading","children","reduceAnimations","loading","disablePast","disableFuture","minDate","maxDate","calendars","disableDragEditing","useUtilityClasses","ownerState","classes","isDragging","slots","dayCalendar","DateRangeCalendar","forwardRef","inProps","ref","shouldHavePreview","defaultMatches","valueProp","value","defaultValue","referenceDate","onChange","className","shouldDisableDate","onMonthChange","defaultCalendarMonth","rangePositionProp","rangePosition","inDefaultRangePosition","defaultRangePosition","inOnRangePositionChange","onRangePositionChange","_props$currentMonthCa","currentMonthCalendarPosition","components","componentsProps","innerSlots","innerSlotProps","slotProps","disableHighlightToday","readOnly","disabled","showDaysOutsideCurrentMonth","dayOfWeekFormatter","disableAutoMonthSwitching","autoFocus","fixedWeekNumber","displayWeekNumber","timezoneProp","timezone","other","_useControlledValueWi","valueManager","handleValueChange","localeText","now","_useRangePosition","handleDatePositionChange","position","handleSelectedDayChange","newDate","selectionState","allowRangeFlip","arguments","length","undefined","_calculateRangeChange","range","nextSelection","newRange","isFullRangeSelected","handleDrop","shouldDisableDragEditing","valueDayRange","useMemo","isValid","startOfDay","endOfDay","_useDragRange","onDrop","onDatePositionChange","dateRange","rangeDragDay","draggingDatePosition","dragEventHandlers","draggingRange","wrappedShouldDisableDate","dayToTest","_useCalendarState","disableSwitchToMonthOnDayFocus","calendarState","changeFocusedDay","changeMonth","handleChangeMonth","onMonthSwitchingAnimationEnd","prevValue","useRef","useEffect","_prevValue$current","_prevValue$current2","date","prevDate","current","isEqual","displayingMonthRange","currentMonthNumber","getMonth","currentMonth","requestedMonthNumber","isSameYear","newMonth","addMonths","selectNextMonth","useCallback","selectPreviousMonth","isNextMonthDisabled","isPreviousMonthDisabled","baseDateValidationProps","commonViewProps","minDateWithDisabled","maxDateWithDisabled","_React$useState","useState","_React$useState2","_slicedToArray","rangePreviewDay","setRangePreviewDay","CalendarTransitionProps","onMouseLeave","previewingRange","handleDayMouseEnter","event","newPreviewRequest","slotsForDayCalendar","slotPropsForDayCalendar","dayOwnerState","_resolveComponentProp","isSelectedStartDate","isSelectedEndDate","shouldInitDragging","isElementDraggable","datePosition","isStartOfHighlighting","isEndOfHighlighting","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","onMouseEnter","isVisuallySelected","selected","draggable","calendarMonths","Array","from","map","index","visibleMonths","process","env","NODE_ENV","firstMonth","focusedMonth","_visibleMonths$find","find","month","isSameMonth","packageName","views","view","direction","onGoToPrevious","onGoToNext","isPreviousHidden","isPreviousDisabled","previousLabel","previousMonth","isNextHidden","isNextDisabled","nextLabel","nextMonth","format","onFocusedDayChange","selectedDays","onSelectedDaysChange","TransitionProps","propTypes","bool","oneOf","object","string","func","any","arrayOf","number","sx","oneOfType"],"sources":["C:/NewPrac/Prac/client/node_modules/@mui/x-date-pickers-pro/DateRangeCalendar/DateRangeCalendar.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\", \"defaultValue\", \"referenceDate\", \"onChange\", \"className\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"shouldDisableDate\", \"reduceAnimations\", \"onMonthChange\", \"defaultCalendarMonth\", \"rangePosition\", \"defaultRangePosition\", \"onRangePositionChange\", \"calendars\", \"currentMonthCalendarPosition\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"disableHighlightToday\", \"readOnly\", \"disabled\", \"showDaysOutsideCurrentMonth\", \"dayOfWeekFormatter\", \"disableAutoMonthSwitching\", \"autoFocus\", \"fixedWeekNumber\", \"disableDragEditing\", \"displayWeekNumber\", \"timezone\"],\n  _excluded2 = [\"isDragging\", \"rangeDragDay\", \"draggingDatePosition\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { resolveComponentProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { Watermark } from '@mui/x-license-pro';\nimport { PickersCalendarHeader } from '@mui/x-date-pickers/PickersCalendarHeader';\nimport { applyDefaultDate, DAY_MARGIN, DayCalendar, useDefaultReduceAnimations, PickersArrowSwitcher, useCalendarState, useDefaultDates, useLocaleText, useNextMonthDisabled, usePreviousMonthDisabled, useUtils, useNow, uncapitalizeObjectKeys, DEFAULT_DESKTOP_MODE_MEDIA_QUERY, buildWarning, useControlledValueWithTimezone } from '@mui/x-date-pickers/internals';\nimport { getReleaseInfo } from '../internals/utils/releaseInfo';\nimport { dateRangeCalendarClasses, getDateRangeCalendarUtilityClass } from './dateRangeCalendarClasses';\nimport { isEndOfRange, isRangeValid, isStartOfRange, isWithinRange } from '../internals/utils/date-utils';\nimport { calculateRangeChange, calculateRangePreview } from '../internals/utils/date-range-manager';\nimport { DateRangePickerDay, dateRangePickerDayClasses as dayClasses } from '../DateRangePickerDay';\nimport { rangeValueManager } from '../internals/utils/valueManagers';\nimport { useDragRange } from './useDragRange';\nimport { useRangePosition } from '../internals/hooks/useRangePosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nconst DateRangeCalendarRoot = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangeCalendarMonthContainer = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.monthContainer\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n  }\n}));\nconst DateRangeCalendarArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\nconst DAY_RANGE_SIZE = 40;\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst warnInvalidCurrentMonthCalendarPosition = buildWarning(['The `currentMonthCalendarPosition` prop must be an integer between `1` and the amount of calendars rendered.', 'For example if you have 2 calendars rendered, it should be equal to either 1 or 2.']);\nconst DayCalendarForRange = styled(DayCalendar)(({\n  theme\n}) => ({\n  minWidth: 312,\n  minHeight: weeksContainerHeight,\n  [`&.${dateRangeCalendarClasses.dayDragging}`]: {\n    [`& .${dayClasses.day}`]: {\n      cursor: 'grabbing'\n    },\n    [`& .${dayClasses.root}:not(.${dayClasses.rangeIntervalDayHighlightStart}):not(.${dayClasses.rangeIntervalDayHighlightEnd}) .${dayClasses.day}:not(.${dayClasses.notSelectedDate})`]: {\n      // we can't override `PickersDay` background color here, because it's styles take precedence\n      opacity: 0.6\n    }\n  },\n  [`&:not(.${dateRangeCalendarClasses.dayDragging}) .${dayClasses.dayOutsideRangeInterval}`]: {\n    '@media (pointer: fine)': {\n      '&:hover': {\n        border: `1px solid ${(theme.vars || theme).palette.grey[500]}`\n      }\n    }\n  }\n}));\nfunction useDateRangeCalendarDefaultizedProps(props, name) {\n  var _themeProps$renderLoa, _themeProps$reduceAni, _props$loading, _props$disablePast, _props$disableFuture, _themeProps$calendars, _themeProps$disableDr;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    renderLoading: (_themeProps$renderLoa = themeProps.renderLoading) != null ? _themeProps$renderLoa : () => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    }),\n    reduceAnimations: (_themeProps$reduceAni = themeProps.reduceAnimations) != null ? _themeProps$reduceAni : defaultReduceAnimations,\n    loading: (_props$loading = props.loading) != null ? _props$loading : false,\n    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,\n    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    calendars: (_themeProps$calendars = themeProps.calendars) != null ? _themeProps$calendars : 2,\n    disableDragEditing: (_themeProps$disableDr = themeProps.disableDragEditing) != null ? _themeProps$disableDr : false\n  });\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isDragging\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    monthContainer: ['monthContainer'],\n    dayCalendar: [isDragging && 'dayDragging']\n  };\n  return composeClasses(slots, getDateRangeCalendarUtilityClass, classes);\n};\nconst DateRangeCalendar = /*#__PURE__*/React.forwardRef(function DateRangeCalendar(inProps, ref) {\n  const props = useDateRangeCalendarDefaultizedProps(inProps, 'MuiDateRangeCalendar');\n  const shouldHavePreview = useMediaQuery(DEFAULT_DESKTOP_MODE_MEDIA_QUERY, {\n    defaultMatches: false\n  });\n  const {\n      value: valueProp,\n      defaultValue,\n      referenceDate,\n      onChange,\n      className,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      shouldDisableDate,\n      reduceAnimations,\n      onMonthChange,\n      defaultCalendarMonth,\n      rangePosition: rangePositionProp,\n      defaultRangePosition: inDefaultRangePosition,\n      onRangePositionChange: inOnRangePositionChange,\n      calendars,\n      currentMonthCalendarPosition = 1,\n      components,\n      componentsProps,\n      slots: innerSlots,\n      slotProps: innerSlotProps,\n      loading,\n      renderLoading,\n      disableHighlightToday,\n      readOnly,\n      disabled,\n      showDaysOutsideCurrentMonth,\n      dayOfWeekFormatter,\n      disableAutoMonthSwitching,\n      autoFocus,\n      fixedWeekNumber,\n      disableDragEditing,\n      displayWeekNumber,\n      timezone: timezoneProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateRangeCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  });\n  const utils = useUtils();\n  const localeText = useLocaleText();\n  const now = useNow(timezone);\n  const slots = innerSlots != null ? innerSlots : uncapitalizeObjectKeys(components);\n  const slotProps = innerSlotProps != null ? innerSlotProps : componentsProps;\n  const {\n    rangePosition,\n    onRangePositionChange\n  } = useRangePosition({\n    rangePosition: rangePositionProp,\n    defaultRangePosition: inDefaultRangePosition,\n    onRangePositionChange: inOnRangePositionChange\n  });\n  const handleDatePositionChange = useEventCallback(position => {\n    if (rangePosition !== position) {\n      onRangePositionChange(position);\n    }\n  });\n  const handleSelectedDayChange = useEventCallback((newDate, selectionState, allowRangeFlip = false) => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: value,\n      rangePosition,\n      allowRangeFlip\n    });\n    onRangePositionChange(nextSelection);\n    const isFullRangeSelected = rangePosition === 'end' && isRangeValid(utils, newRange);\n    handleValueChange(newRange, isFullRangeSelected ? 'finish' : 'partial');\n  });\n  const handleDrop = useEventCallback(newDate => {\n    handleSelectedDayChange(newDate, undefined, true);\n  });\n  const shouldDisableDragEditing = disableDragEditing || disabled || readOnly;\n\n  // Range going for the start of the start day to the end of the end day.\n  // This makes sure that `isWithinRange` works with any time in the start and end day.\n  const valueDayRange = React.useMemo(() => [value[0] == null || !utils.isValid(value[0]) ? value[0] : utils.startOfDay(value[0]), value[1] == null || !utils.isValid(value[1]) ? value[1] : utils.endOfDay(value[1])], [value, utils]);\n  const _useDragRange = useDragRange({\n      disableDragEditing: shouldDisableDragEditing,\n      onDrop: handleDrop,\n      onDatePositionChange: handleDatePositionChange,\n      utils,\n      dateRange: valueDayRange,\n      timezone\n    }),\n    {\n      isDragging,\n      rangeDragDay,\n      draggingDatePosition\n    } = _useDragRange,\n    dragEventHandlers = _objectWithoutPropertiesLoose(_useDragRange, _excluded2);\n  const ownerState = _extends({}, props, {\n    isDragging\n  });\n  const classes = useUtilityClasses(ownerState);\n  const draggingRange = React.useMemo(() => {\n    if (!valueDayRange[0] || !valueDayRange[1] || !rangeDragDay) {\n      return [null, null];\n    }\n    const newRange = calculateRangeChange({\n      utils,\n      range: valueDayRange,\n      newDate: rangeDragDay,\n      rangePosition,\n      allowRangeFlip: true\n    }).newRange;\n    return newRange[0] !== null && newRange[1] !== null ? [utils.startOfDay(newRange[0]), utils.endOfDay(newRange[1])] : newRange;\n  }, [rangePosition, rangeDragDay, utils, valueDayRange]);\n  const wrappedShouldDisableDate = React.useMemo(() => {\n    if (!shouldDisableDate) {\n      return undefined;\n    }\n    return dayToTest => shouldDisableDate(dayToTest, draggingDatePosition || rangePosition);\n  }, [shouldDisableDate, rangePosition, draggingDatePosition]);\n  const {\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value: value[0] || value[1],\n    referenceDate,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate: wrappedShouldDisableDate,\n    timezone\n  });\n  const prevValue = React.useRef(null);\n  React.useEffect(() => {\n    var _prevValue$current, _prevValue$current2;\n    const date = rangePosition === 'start' ? value[0] : value[1];\n    if (!date || !utils.isValid(date)) {\n      return;\n    }\n    const prevDate = rangePosition === 'start' ? (_prevValue$current = prevValue.current) == null ? void 0 : _prevValue$current[0] : (_prevValue$current2 = prevValue.current) == null ? void 0 : _prevValue$current2[1];\n    prevValue.current = value;\n\n    // The current date did not change, this call comes either from a `rangePosition` change or a change in the other date.\n    // In both cases, we don't want to change the visible month(s).\n    if (disableAutoMonthSwitching && prevDate && utils.isEqual(prevDate, date)) {\n      return;\n    }\n    const displayingMonthRange = calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(date);\n    if (!utils.isSameYear(calendarState.currentMonth, date) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = rangePosition === 'start' ? date :\n      // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(date, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  }, [rangePosition, value]); // eslint-disable-line\n\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.addMonths(calendarState.currentMonth, 1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.addMonths(calendarState.currentMonth, -1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  const isNextMonthDisabled = useNextMonthDisabled(calendarState.currentMonth, {\n    disableFuture,\n    maxDate,\n    timezone\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(calendarState.currentMonth, {\n    disablePast,\n    minDate,\n    timezone\n  });\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled\n  };\n\n  // When disabled, limit the view to the selected date\n  const minDateWithDisabled = disabled && value[0] || minDate;\n  const maxDateWithDisabled = disabled && value[1] || maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: valueDayRange,\n    newDate: rangePreviewDay,\n    rangePosition\n  });\n  const handleDayMouseEnter = useEventCallback((event, newPreviewRequest) => {\n    if (!isWithinRange(utils, newPreviewRequest, valueDayRange)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  });\n  const slotsForDayCalendar = _extends({\n    day: DateRangePickerDay\n  }, slots);\n  const slotPropsForDayCalendar = _extends({}, slotProps, {\n    day: dayOwnerState => {\n      var _resolveComponentProp;\n      const {\n        day\n      } = dayOwnerState;\n      const isSelectedStartDate = isStartOfRange(utils, day, valueDayRange);\n      const isSelectedEndDate = isEndOfRange(utils, day, valueDayRange);\n      const shouldInitDragging = !shouldDisableDragEditing && valueDayRange[0] && valueDayRange[1];\n      const isElementDraggable = shouldInitDragging && (isSelectedStartDate || isSelectedEndDate);\n      let datePosition;\n      if (isSelectedStartDate) {\n        datePosition = 'start';\n      } else if (isSelectedEndDate) {\n        datePosition = 'end';\n      }\n      const isStartOfHighlighting = isDragging ? isStartOfRange(utils, day, draggingRange) : isSelectedStartDate;\n      const isEndOfHighlighting = isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate;\n      return _extends({\n        isPreviewing: shouldHavePreview ? isWithinRange(utils, day, previewingRange) : false,\n        isStartOfPreviewing: shouldHavePreview ? isStartOfRange(utils, day, previewingRange) : false,\n        isEndOfPreviewing: shouldHavePreview ? isEndOfRange(utils, day, previewingRange) : false,\n        isHighlighting: isWithinRange(utils, day, isDragging ? draggingRange : valueDayRange),\n        isStartOfHighlighting,\n        isEndOfHighlighting: isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate,\n        onMouseEnter: shouldHavePreview ? handleDayMouseEnter : undefined,\n        // apply selected styling to the dragging start or end day\n        isVisuallySelected: dayOwnerState.selected || isDragging && (isStartOfHighlighting || isEndOfHighlighting),\n        'data-position': datePosition\n      }, dragEventHandlers, {\n        draggable: isElementDraggable ? true : undefined\n      }, (_resolveComponentProp = resolveComponentProps(slotProps == null ? void 0 : slotProps.day, dayOwnerState)) != null ? _resolveComponentProp : {});\n    }\n  });\n  const calendarMonths = React.useMemo(() => Array.from({\n    length: calendars\n  }).map((_, index) => index), [calendars]);\n  const visibleMonths = React.useMemo(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (currentMonthCalendarPosition > calendars || currentMonthCalendarPosition < 1) {\n        warnInvalidCurrentMonthCalendarPosition();\n      }\n    }\n    const firstMonth = utils.addMonths(calendarState.currentMonth, 1 - currentMonthCalendarPosition);\n    return Array.from({\n      length: calendars\n    }).map((_, index) => utils.addMonths(firstMonth, index));\n  }, [utils, calendarState.currentMonth, calendars, currentMonthCalendarPosition]);\n  const focusedMonth = React.useMemo(() => {\n    var _visibleMonths$find;\n    if (!autoFocus) {\n      return null;\n    }\n\n    // The focus priority of the \"day\" view is as follows:\n    // 1. Month of the `start` date\n    // 2. Month of the `end` date\n    // 3. Month of the current date\n    // 4. First visible month\n\n    if (value[0] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[0]));\n    }\n    if (value[1] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[1]));\n    }\n    return (_visibleMonths$find = visibleMonths.find(month => utils.isSameMonth(month, now))) != null ? _visibleMonths$find : visibleMonths[0];\n  }, [utils, value, visibleMonths, autoFocus, now]);\n  return /*#__PURE__*/_jsxs(DateRangeCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(Watermark, {\n      packageName: \"x-date-pickers-pro\",\n      releaseInfo: releaseInfo\n    }), calendarMonths.map((month, index) => /*#__PURE__*/_jsxs(DateRangeCalendarMonthContainer, {\n      className: classes.monthContainer,\n      children: [calendars === 1 ? /*#__PURE__*/_jsx(PickersCalendarHeader, {\n        views: ['day'],\n        view: 'day',\n        currentMonth: calendarState.currentMonth,\n        onMonthChange: (newMonth, direction) => handleChangeMonth({\n          newMonth,\n          direction\n        }),\n        minDate: minDateWithDisabled,\n        maxDate: maxDateWithDisabled,\n        disabled: disabled,\n        disablePast: disablePast,\n        disableFuture: disableFuture,\n        reduceAnimations: reduceAnimations,\n        slots: slots,\n        slotProps: slotProps,\n        timezone: timezone\n      }) : /*#__PURE__*/_jsx(DateRangeCalendarArrowSwitcher, {\n        onGoToPrevious: selectPreviousMonth,\n        onGoToNext: selectNextMonth,\n        isPreviousHidden: index !== 0,\n        isPreviousDisabled: isPreviousMonthDisabled,\n        previousLabel: localeText.previousMonth,\n        isNextHidden: index !== calendars - 1,\n        isNextDisabled: isNextMonthDisabled,\n        nextLabel: localeText.nextMonth,\n        slots: slots,\n        slotProps: slotProps,\n        children: utils.format(visibleMonths[month], 'monthAndYear')\n      }), /*#__PURE__*/_jsx(DayCalendarForRange, _extends({\n        className: classes.dayCalendar\n      }, calendarState, baseDateValidationProps, commonViewProps, {\n        onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n        onFocusedDayChange: changeFocusedDay,\n        reduceAnimations: reduceAnimations,\n        selectedDays: value,\n        onSelectedDaysChange: handleSelectedDayChange,\n        currentMonth: visibleMonths[month],\n        TransitionProps: CalendarTransitionProps,\n        shouldDisableDate: wrappedShouldDisableDate,\n        showDaysOutsideCurrentMonth: calendars === 1 && showDaysOutsideCurrentMonth,\n        dayOfWeekFormatter: dayOfWeekFormatter,\n        loading: loading,\n        renderLoading: renderLoading,\n        slots: slotsForDayCalendar,\n        slotProps: slotPropsForDayCalendar,\n        autoFocus: month === focusedMonth,\n        fixedWeekNumber: fixedWeekNumber,\n        displayWeekNumber: displayWeekNumber,\n        timezone: timezone\n      }), index)]\n    }, month))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangeCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The number of calendars to render.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Position the current month is rendered in.\n   * @default 1\n   */\n  currentMonthCalendarPosition: PropTypes.oneOf([1, 2, 3]),\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value={[null, null]}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The initial position in the edited date range.\n   * Used when the component is not controlled.\n   * @default 'start'\n   */\n  defaultRangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, editing dates by dragging is disabled.\n   * @default false\n   */\n  disableDragEditing: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Callback fired when the value changes.\n   * @template TDate\n   * @param {DateRange<TDate>} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date range selection is complete.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the range position changes.\n   * @param {RangePosition} rangePosition The new range position.\n   */\n  onRangePositionChange: PropTypes.func,\n  /**\n   * The position in the currently edited date range.\n   * Used when the component position is controlled.\n   */\n  rangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => \"...\"\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.any)\n} : void 0;\nexport { DateRangeCalendar };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}