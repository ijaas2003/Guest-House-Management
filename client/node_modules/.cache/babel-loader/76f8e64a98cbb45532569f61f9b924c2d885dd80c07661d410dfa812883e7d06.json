{"ast":null,"code":"import _regeneratorRuntime from\"C:/NewPrac/Prac/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/NewPrac/Prac/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/NewPrac/Prac/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{useAuthContext}from'./useAuthContext';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';var useSignup=function useSignup(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),iserror=_useState2[0],setError=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),isloading=_useState4[0],setLoading=_useState4[1];var _useAuthContext=useAuthContext(),dispatch=_useAuthContext.dispatch;var location=useNavigate();var signups=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var Email,Password,action,Name,PhoneNumber,types,Fetch,JsonData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:Email=_ref.Email,Password=_ref.Password,action=_ref.action,Name=_ref.Name,PhoneNumber=_ref.PhoneNumber,types=_ref.types;console.log({Email:Email,Password:Password,Name:Name,PhoneNumber:PhoneNumber,action:action,types:types});console.log(action);setError(null);setLoading(true);_context.next=7;return fetch(\"http://localhost:4000/\".concat(action),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({Email:Email,Password:Password,Name:Name,PhoneNumber:PhoneNumber,types:types})});case 7:Fetch=_context.sent;_context.next=10;return Fetch.json();case 10:JsonData=_context.sent;console.log(JsonData.Error);if(Fetch.ok){_context.next=19;break;}// Handle the Error because if the user is not available\nsetLoading(true);setError(JsonData.Error);toast.error(JsonData.Error);return _context.abrupt(\"return\");case 19:// Save the user to localStorage for authentication purpose\nsetLoading(false);localStorage.setItem('User',JSON.stringify(JsonData));dispatch({type:\"Login\",payload:JsonData});toast.success(\"Successfully Loggedin\");location(\"/\".concat(types===\"user\"?\"home\":\"ownerhome\"));return _context.abrupt(\"return\");case 25:case\"end\":return _context.stop();}},_callee);}));return function signups(_x){return _ref2.apply(this,arguments);};}();return{signups:signups,isloading:isloading,iserror:iserror};};export default useSignup;","map":{"version":3,"names":["useState","useAuthContext","useNavigate","toast","useSignup","_useState","_useState2","_slicedToArray","iserror","setError","_useState3","_useState4","isloading","setLoading","_useAuthContext","dispatch","location","signups","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","Email","Password","action","Name","PhoneNumber","types","Fetch","JsonData","wrap","_callee$","_context","prev","next","console","log","fetch","concat","method","headers","body","JSON","stringify","sent","json","Error","ok","error","abrupt","localStorage","setItem","type","payload","success","stop","_x","apply","arguments"],"sources":["C:/NewPrac/Prac/client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nconst useSignup = () => {\r\n    const [iserror, setError] = useState(null);\r\n    const [isloading, setLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n    const location = useNavigate();\r\n    const signups = async ({ Email, Password, action, Name, PhoneNumber, types }) => {\r\n        console.log({ Email, Password, Name, PhoneNumber, action, types });\r\n        console.log(action);\r\n        setError(null);\r\n        setLoading(true);\r\n        const Fetch = await fetch(`http://localhost:4000/${action}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify({ Email, Password, Name, PhoneNumber, types })\r\n        });\r\n\r\n        const JsonData = await Fetch.json();\r\n        console.log(JsonData.Error);\r\n        if (!Fetch.ok) {\r\n            // Handle the Error because if the user is not available\r\n            setLoading(true);\r\n            setError(JsonData.Error);\r\n            toast.error(JsonData.Error);\r\n            return;\r\n        } else {\r\n            // Save the user to localStorage for authentication purpose\r\n            setLoading(false);\r\n            localStorage.setItem('User', JSON.stringify(JsonData));\r\n            dispatch({ type: \"Login\", payload: JsonData });\r\n            toast.success(\"Successfully Loggedin\")\r\n            location(`/${types===\"user\"?\"home\":\"ownerhome\"}`);\r\n            return\r\n        }\r\n    }\r\n    return { signups, isloading, iserror };\r\n}\r\n\r\nexport default useSignup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}