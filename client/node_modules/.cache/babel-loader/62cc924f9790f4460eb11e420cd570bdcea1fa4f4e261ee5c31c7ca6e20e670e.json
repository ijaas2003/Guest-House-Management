{"ast":null,"code":"/**\n * @mui/styled-engine-sc v6.0.0-alpha.1\n *\n * @license MIT\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport scStyled from 'styled-components';\nexport default function styled(tag, options) {\n  let stylesFactory;\n  if (options) {\n    stylesFactory = scStyled(tag).withConfig({\n      displayName: options.label,\n      shouldForwardProp: options.shouldForwardProp\n    });\n  } else {\n    stylesFactory = scStyled(tag);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const fn = (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n      if (styles.length === 0) {\n        console.error([`MUI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n      return stylesFactory(...styles);\n    };\n    fn.withConfig = stylesFactory.withConfig;\n    return fn;\n  }\n  return stylesFactory;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const internal_processStyles = (tag, processor) => {\n  // Styled-components attaches an instance to `componentStyle`.\n  // https://github.com/styled-components/styled-components/blob/da8151762dcf72735ffba358173d4c097f6d5888/packages/styled-components/src/models/StyledComponent.ts#L257\n  //\n  // The instance contains `rules` (the styles)\n  // https://github.com/styled-components/styled-components/blob/da8151762dcf72735ffba358173d4c097f6d5888/packages/styled-components/src/models/ComponentStyle.ts#L23\n  if (tag.componentStyle) {\n    tag.componentStyle.rules = processor(tag.componentStyle.rules);\n  }\n};\nexport { ThemeContext, keyframes, css } from 'styled-components';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';","map":{"version":3,"names":["scStyled","styled","tag","options","stylesFactory","withConfig","displayName","label","shouldForwardProp","process","env","NODE_ENV","fn","styles","component","length","console","error","join","some","style","undefined","internal_processStyles","processor","componentStyle","rules","ThemeContext","keyframes","css","default","StyledEngineProvider","GlobalStyles"],"sources":["C:/NewPrac/Prac/client/node_modules/@mui/styled-engine-sc/index.js"],"sourcesContent":["/**\n * @mui/styled-engine-sc v6.0.0-alpha.1\n *\n * @license MIT\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport scStyled from 'styled-components';\nexport default function styled(tag, options) {\n  let stylesFactory;\n  if (options) {\n    stylesFactory = scStyled(tag).withConfig({\n      displayName: options.label,\n      shouldForwardProp: options.shouldForwardProp\n    });\n  } else {\n    stylesFactory = scStyled(tag);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const fn = (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n      if (styles.length === 0) {\n        console.error([`MUI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n      return stylesFactory(...styles);\n    };\n    fn.withConfig = stylesFactory.withConfig;\n    return fn;\n  }\n  return stylesFactory;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const internal_processStyles = (tag, processor) => {\n  // Styled-components attaches an instance to `componentStyle`.\n  // https://github.com/styled-components/styled-components/blob/da8151762dcf72735ffba358173d4c097f6d5888/packages/styled-components/src/models/StyledComponent.ts#L257\n  //\n  // The instance contains `rules` (the styles)\n  // https://github.com/styled-components/styled-components/blob/da8151762dcf72735ffba358173d4c097f6d5888/packages/styled-components/src/models/ComponentStyle.ts#L23\n  if (tag.componentStyle) {\n    tag.componentStyle.rules = processor(tag.componentStyle.rules);\n  }\n};\nexport { ThemeContext, keyframes, css } from 'styled-components';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,eAAe,SAASC,MAAMA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC3C,IAAIC,aAAa;EACjB,IAAID,OAAO,EAAE;IACXC,aAAa,GAAGJ,QAAQ,CAACE,GAAG,CAAC,CAACG,UAAU,CAAC;MACvCC,WAAW,EAAEH,OAAO,CAACI,KAAK;MAC1BC,iBAAiB,EAAEL,OAAO,CAACK;IAC7B,CAAC,CAAC;EACJ,CAAC,MAAM;IACLJ,aAAa,GAAGJ,QAAQ,CAACE,GAAG,CAAC;EAC/B;EACA,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAMC,EAAE,GAAGA,CAAC,GAAGC,MAAM,KAAK;MACxB,MAAMC,SAAS,GAAG,OAAOZ,GAAG,KAAK,QAAQ,GAAI,IAAGA,GAAI,GAAE,GAAG,WAAW;MACpE,IAAIW,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;QACvBC,OAAO,CAACC,KAAK,CAAC,CAAE,uCAAsCH,SAAU,qCAAoC,EAAE,8EAA8E,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,CAAC;MACnM,CAAC,MAAM,IAAIL,MAAM,CAACM,IAAI,CAACC,KAAK,IAAIA,KAAK,KAAKC,SAAS,CAAC,EAAE;QACpDL,OAAO,CAACC,KAAK,CAAE,mBAAkBH,SAAU,qDAAoD,CAAC;MAClG;MACA,OAAOV,aAAa,CAAC,GAAGS,MAAM,CAAC;IACjC,CAAC;IACDD,EAAE,CAACP,UAAU,GAAGD,aAAa,CAACC,UAAU;IACxC,OAAOO,EAAE;EACX;EACA,OAAOR,aAAa;AACtB;;AAEA;AACA,OAAO,MAAMkB,sBAAsB,GAAGA,CAACpB,GAAG,EAAEqB,SAAS,KAAK;EACxD;EACA;EACA;EACA;EACA;EACA,IAAIrB,GAAG,CAACsB,cAAc,EAAE;IACtBtB,GAAG,CAACsB,cAAc,CAACC,KAAK,GAAGF,SAAS,CAACrB,GAAG,CAACsB,cAAc,CAACC,KAAK,CAAC;EAChE;AACF,CAAC;AACD,SAASC,YAAY,EAAEC,SAAS,EAAEC,GAAG,QAAQ,mBAAmB;AAChE,SAASC,OAAO,IAAIC,oBAAoB,QAAQ,wBAAwB;AACxE,SAASD,OAAO,IAAIE,YAAY,QAAQ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}