{"ast":null,"code":"var _jsxFileName = \"C:\\\\NewPrac\\\\Prac\\\\client\\\\src\\\\Components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [base64Images, setBase64Images] = useState([]);\n  const handleImageChange = e => {\n    const files = e.target.files;\n    if (files) {\n      const promises = Array.from(files).map(file => {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = e => {\n            resolve(e.target.result);\n          };\n          reader.onerror = error => {\n            reject(error);\n          };\n          reader.readAsDataURL(file);\n        });\n      });\n      Promise.all(promises).then(results => {\n        setSelectedImages(Array.from(files));\n        setBase64Images(results);\n      }).catch(error => {\n        console.error(\"Error converting images to base64:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: image.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Converted Base64 Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: base64Images.map((base64Image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: base64Image,\n            alt: `Image ${index}`,\n            style: {\n              maxWidth: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"w8StOTfMsNBJN7vBKKZYS8a9CaM=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploader","_s","selectedImages","setSelectedImages","base64Images","setBase64Images","handleImageChange","e","files","target","promises","Array","from","map","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","all","then","results","catch","console","children","type","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","image","index","name","base64Image","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/NewPrac/Prac/client/src/Components/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ImageUploader = () => {\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [base64Images, setBase64Images] = useState([]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = e.target.files;\r\n\r\n    if (files) {\r\n      const promises = Array.from(files).map((file) => {\r\n        return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (e) => {\r\n            resolve(e.target.result);\r\n          };\r\n\r\n          reader.onerror = (error) => {\r\n            reject(error);\r\n          };\r\n\r\n          reader.readAsDataURL(file);\r\n        });\r\n      });\r\n\r\n      Promise.all(promises)\r\n        .then((results) => {\r\n          setSelectedImages(Array.from(files));\r\n          setBase64Images(results);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error converting images to base64:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" multiple onChange={handleImageChange} />\r\n      <div>\r\n        <h2>Selected Images:</h2>\r\n        <ul>\r\n          {selectedImages.map((image, index) => (\r\n            <li key={index}>{image.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h2>Converted Base64 Images:</h2>\r\n        <ul>\r\n          {base64Images.map((base64Image, index) => (\r\n            <li key={index}>\r\n              <img src={base64Image} alt={`Image ${index}`} style={{ maxWidth: \"100px\" }} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}