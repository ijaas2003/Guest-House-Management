{"ast":null,"code":"import { md5 } from '../encoding/md5';\nimport { base64Encode } from '../encoding/base64';\nimport { LICENSE_SCOPES } from '../utils/licenseScope';\nimport { LICENSING_MODELS } from '../utils/licensingModel';\nvar licenseVersion = '2';\nfunction getClearLicenseString(details) {\n  if (details.scope && !LICENSE_SCOPES.includes(details.scope)) {\n    throw new Error('MUI: Invalid scope');\n  }\n  if (details.licensingModel && !LICENSING_MODELS.includes(details.licensingModel)) {\n    throw new Error('MUI: Invalid licensing model');\n  }\n  return \"O=\".concat(details.orderNumber, \",E=\").concat(details.expiryDate.getTime(), \",S=\").concat(details.scope, \",LM=\").concat(details.licensingModel, \",KV=\").concat(licenseVersion);\n}\nexport function generateLicense(details) {\n  var licenseStr = getClearLicenseString(details);\n  return \"\".concat(md5(base64Encode(licenseStr))).concat(base64Encode(licenseStr));\n}","map":{"version":3,"names":["md5","base64Encode","LICENSE_SCOPES","LICENSING_MODELS","licenseVersion","getClearLicenseString","details","scope","includes","Error","licensingModel","concat","orderNumber","expiryDate","getTime","generateLicense","licenseStr"],"sources":["C:/NewPrac/Prac/client/node_modules/@mui/x-license-pro/generateLicense/generateLicense.js"],"sourcesContent":["import { md5 } from '../encoding/md5';\nimport { base64Encode } from '../encoding/base64';\nimport { LICENSE_SCOPES } from '../utils/licenseScope';\nimport { LICENSING_MODELS } from '../utils/licensingModel';\nconst licenseVersion = '2';\nfunction getClearLicenseString(details) {\n  if (details.scope && !LICENSE_SCOPES.includes(details.scope)) {\n    throw new Error('MUI: Invalid scope');\n  }\n  if (details.licensingModel && !LICENSING_MODELS.includes(details.licensingModel)) {\n    throw new Error('MUI: Invalid licensing model');\n  }\n  return `O=${details.orderNumber},E=${details.expiryDate.getTime()},S=${details.scope},LM=${details.licensingModel},KV=${licenseVersion}`;\n}\nexport function generateLicense(details) {\n  const licenseStr = getClearLicenseString(details);\n  return `${md5(base64Encode(licenseStr))}${base64Encode(licenseStr)}`;\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;AACrC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,IAAMC,cAAc,GAAG,GAAG;AAC1B,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACtC,IAAIA,OAAO,CAACC,KAAK,IAAI,CAACL,cAAc,CAACM,QAAQ,CAACF,OAAO,CAACC,KAAK,CAAC,EAAE;IAC5D,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACA,IAAIH,OAAO,CAACI,cAAc,IAAI,CAACP,gBAAgB,CAACK,QAAQ,CAACF,OAAO,CAACI,cAAc,CAAC,EAAE;IAChF,MAAM,IAAID,KAAK,CAAC,8BAA8B,CAAC;EACjD;EACA,YAAAE,MAAA,CAAYL,OAAO,CAACM,WAAW,SAAAD,MAAA,CAAML,OAAO,CAACO,UAAU,CAACC,OAAO,CAAC,CAAC,SAAAH,MAAA,CAAML,OAAO,CAACC,KAAK,UAAAI,MAAA,CAAOL,OAAO,CAACI,cAAc,UAAAC,MAAA,CAAOP,cAAc;AACxI;AACA,OAAO,SAASW,eAAeA,CAACT,OAAO,EAAE;EACvC,IAAMU,UAAU,GAAGX,qBAAqB,CAACC,OAAO,CAAC;EACjD,UAAAK,MAAA,CAAUX,GAAG,CAACC,YAAY,CAACe,UAAU,CAAC,CAAC,EAAAL,MAAA,CAAGV,YAAY,CAACe,UAAU,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}