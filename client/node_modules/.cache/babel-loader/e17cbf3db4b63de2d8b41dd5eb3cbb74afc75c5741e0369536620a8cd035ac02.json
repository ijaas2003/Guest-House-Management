{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\", \"defaultValue\", \"referenceDate\", \"onChange\", \"className\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"shouldDisableDate\", \"reduceAnimations\", \"onMonthChange\", \"defaultCalendarMonth\", \"rangePosition\", \"defaultRangePosition\", \"onRangePositionChange\", \"calendars\", \"currentMonthCalendarPosition\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"disableHighlightToday\", \"readOnly\", \"disabled\", \"showDaysOutsideCurrentMonth\", \"dayOfWeekFormatter\", \"disableAutoMonthSwitching\", \"autoFocus\", \"fixedWeekNumber\", \"disableDragEditing\", \"displayWeekNumber\", \"timezone\"],\n  _excluded2 = [\"isDragging\", \"rangeDragDay\", \"draggingDatePosition\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { resolveComponentProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { Watermark } from '@mui/x-license-pro';\nimport { PickersCalendarHeader } from '@mui/x-date-pickers/PickersCalendarHeader';\nimport { applyDefaultDate, DAY_MARGIN, DayCalendar, useDefaultReduceAnimations, PickersArrowSwitcher, useCalendarState, useDefaultDates, useLocaleText, useNextMonthDisabled, usePreviousMonthDisabled, useUtils, useNow, uncapitalizeObjectKeys, DEFAULT_DESKTOP_MODE_MEDIA_QUERY, buildWarning, useControlledValueWithTimezone } from '@mui/x-date-pickers/internals';\nimport { getReleaseInfo } from '../internals/utils/releaseInfo';\nimport { dateRangeCalendarClasses, getDateRangeCalendarUtilityClass } from './dateRangeCalendarClasses';\nimport { isEndOfRange, isRangeValid, isStartOfRange, isWithinRange } from '../internals/utils/date-utils';\nimport { calculateRangeChange, calculateRangePreview } from '../internals/utils/date-range-manager';\nimport { DateRangePickerDay, dateRangePickerDayClasses as dayClasses } from '../DateRangePickerDay';\nimport { rangeValueManager } from '../internals/utils/valueManagers';\nimport { useDragRange } from './useDragRange';\nimport { useRangePosition } from '../internals/hooks/useRangePosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nconst DateRangeCalendarRoot = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangeCalendarMonthContainer = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.monthContainer\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n  }\n}));\nconst DateRangeCalendarArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\nconst DAY_RANGE_SIZE = 40;\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst warnInvalidCurrentMonthCalendarPosition = buildWarning(['The `currentMonthCalendarPosition` prop must be an integer between `1` and the amount of calendars rendered.', 'For example if you have 2 calendars rendered, it should be equal to either 1 or 2.']);\nconst DayCalendarForRange = styled(DayCalendar)(({\n  theme\n}) => ({\n  minWidth: 312,\n  minHeight: weeksContainerHeight,\n  [`&.${dateRangeCalendarClasses.dayDragging}`]: {\n    [`& .${dayClasses.day}`]: {\n      cursor: 'grabbing'\n    },\n    [`& .${dayClasses.root}:not(.${dayClasses.rangeIntervalDayHighlightStart}):not(.${dayClasses.rangeIntervalDayHighlightEnd}) .${dayClasses.day}:not(.${dayClasses.notSelectedDate})`]: {\n      // we can't override `PickersDay` background color here, because it's styles take precedence\n      opacity: 0.6\n    }\n  },\n  [`&:not(.${dateRangeCalendarClasses.dayDragging}) .${dayClasses.dayOutsideRangeInterval}`]: {\n    '@media (pointer: fine)': {\n      '&:hover': {\n        border: `1px solid ${(theme.vars || theme).palette.grey[500]}`\n      }\n    }\n  }\n}));\nfunction useDateRangeCalendarDefaultizedProps(props, name) {\n  var _themeProps$renderLoa, _themeProps$reduceAni, _props$loading, _props$disablePast, _props$disableFuture, _themeProps$calendars, _themeProps$disableDr;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    renderLoading: (_themeProps$renderLoa = themeProps.renderLoading) != null ? _themeProps$renderLoa : () => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    }),\n    reduceAnimations: (_themeProps$reduceAni = themeProps.reduceAnimations) != null ? _themeProps$reduceAni : defaultReduceAnimations,\n    loading: (_props$loading = props.loading) != null ? _props$loading : false,\n    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,\n    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    calendars: (_themeProps$calendars = themeProps.calendars) != null ? _themeProps$calendars : 2,\n    disableDragEditing: (_themeProps$disableDr = themeProps.disableDragEditing) != null ? _themeProps$disableDr : false\n  });\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isDragging\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    monthContainer: ['monthContainer'],\n    dayCalendar: [isDragging && 'dayDragging']\n  };\n  return composeClasses(slots, getDateRangeCalendarUtilityClass, classes);\n};\nconst DateRangeCalendar = /*#__PURE__*/React.forwardRef(function DateRangeCalendar(inProps, ref) {\n  const props = useDateRangeCalendarDefaultizedProps(inProps, 'MuiDateRangeCalendar');\n  const shouldHavePreview = useMediaQuery(DEFAULT_DESKTOP_MODE_MEDIA_QUERY, {\n    defaultMatches: false\n  });\n  const {\n      value: valueProp,\n      defaultValue,\n      referenceDate,\n      onChange,\n      className,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      shouldDisableDate,\n      reduceAnimations,\n      onMonthChange,\n      defaultCalendarMonth,\n      rangePosition: rangePositionProp,\n      defaultRangePosition: inDefaultRangePosition,\n      onRangePositionChange: inOnRangePositionChange,\n      calendars,\n      currentMonthCalendarPosition = 1,\n      components,\n      componentsProps,\n      slots: innerSlots,\n      slotProps: innerSlotProps,\n      loading,\n      renderLoading,\n      disableHighlightToday,\n      readOnly,\n      disabled,\n      showDaysOutsideCurrentMonth,\n      dayOfWeekFormatter,\n      disableAutoMonthSwitching,\n      autoFocus,\n      fixedWeekNumber,\n      disableDragEditing,\n      displayWeekNumber,\n      timezone: timezoneProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateRangeCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  });\n  const utils = useUtils();\n  const localeText = useLocaleText();\n  const now = useNow(timezone);\n  const slots = innerSlots != null ? innerSlots : uncapitalizeObjectKeys(components);\n  const slotProps = innerSlotProps != null ? innerSlotProps : componentsProps;\n  const {\n    rangePosition,\n    onRangePositionChange\n  } = useRangePosition({\n    rangePosition: rangePositionProp,\n    defaultRangePosition: inDefaultRangePosition,\n    onRangePositionChange: inOnRangePositionChange\n  });\n  const handleDatePositionChange = useEventCallback(position => {\n    if (rangePosition !== position) {\n      onRangePositionChange(position);\n    }\n  });\n  const handleSelectedDayChange = useEventCallback((newDate, selectionState, allowRangeFlip = false) => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: value,\n      rangePosition,\n      allowRangeFlip\n    });\n    onRangePositionChange(nextSelection);\n    const isFullRangeSelected = rangePosition === 'end' && isRangeValid(utils, newRange);\n    handleValueChange(newRange, isFullRangeSelected ? 'finish' : 'partial');\n  });\n  const handleDrop = useEventCallback(newDate => {\n    handleSelectedDayChange(newDate, undefined, true);\n  });\n  const shouldDisableDragEditing = disableDragEditing || disabled || readOnly;\n\n  // Range going for the start of the start day to the end of the end day.\n  // This makes sure that `isWithinRange` works with any time in the start and end day.\n  const valueDayRange = React.useMemo(() => [value[0] == null || !utils.isValid(value[0]) ? value[0] : utils.startOfDay(value[0]), value[1] == null || !utils.isValid(value[1]) ? value[1] : utils.endOfDay(value[1])], [value, utils]);\n  const _useDragRange = useDragRange({\n      disableDragEditing: shouldDisableDragEditing,\n      onDrop: handleDrop,\n      onDatePositionChange: handleDatePositionChange,\n      utils,\n      dateRange: valueDayRange,\n      timezone\n    }),\n    {\n      isDragging,\n      rangeDragDay,\n      draggingDatePosition\n    } = _useDragRange,\n    dragEventHandlers = _objectWithoutPropertiesLoose(_useDragRange, _excluded2);\n  const ownerState = _extends({}, props, {\n    isDragging\n  });\n  const classes = useUtilityClasses(ownerState);\n  const draggingRange = React.useMemo(() => {\n    if (!valueDayRange[0] || !valueDayRange[1] || !rangeDragDay) {\n      return [null, null];\n    }\n    const newRange = calculateRangeChange({\n      utils,\n      range: valueDayRange,\n      newDate: rangeDragDay,\n      rangePosition,\n      allowRangeFlip: true\n    }).newRange;\n    return newRange[0] !== null && newRange[1] !== null ? [utils.startOfDay(newRange[0]), utils.endOfDay(newRange[1])] : newRange;\n  }, [rangePosition, rangeDragDay, utils, valueDayRange]);\n  const wrappedShouldDisableDate = React.useMemo(() => {\n    if (!shouldDisableDate) {\n      return undefined;\n    }\n    return dayToTest => shouldDisableDate(dayToTest, draggingDatePosition || rangePosition);\n  }, [shouldDisableDate, rangePosition, draggingDatePosition]);\n  const {\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value: value[0] || value[1],\n    referenceDate,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate: wrappedShouldDisableDate,\n    timezone\n  });\n  const prevValue = React.useRef(null);\n  React.useEffect(() => {\n    var _prevValue$current, _prevValue$current2;\n    const date = rangePosition === 'start' ? value[0] : value[1];\n    if (!date || !utils.isValid(date)) {\n      return;\n    }\n    const prevDate = rangePosition === 'start' ? (_prevValue$current = prevValue.current) == null ? void 0 : _prevValue$current[0] : (_prevValue$current2 = prevValue.current) == null ? void 0 : _prevValue$current2[1];\n    prevValue.current = value;\n\n    // The current date did not change, this call comes either from a `rangePosition` change or a change in the other date.\n    // In both cases, we don't want to change the visible month(s).\n    if (disableAutoMonthSwitching && prevDate && utils.isEqual(prevDate, date)) {\n      return;\n    }\n    const displayingMonthRange = calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(date);\n    if (!utils.isSameYear(calendarState.currentMonth, date) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = rangePosition === 'start' ? date :\n      // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(date, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  }, [rangePosition, value]); // eslint-disable-line\n\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.addMonths(calendarState.currentMonth, 1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.addMonths(calendarState.currentMonth, -1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  const isNextMonthDisabled = useNextMonthDisabled(calendarState.currentMonth, {\n    disableFuture,\n    maxDate,\n    timezone\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(calendarState.currentMonth, {\n    disablePast,\n    minDate,\n    timezone\n  });\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled\n  };\n\n  // When disabled, limit the view to the selected date\n  const minDateWithDisabled = disabled && value[0] || minDate;\n  const maxDateWithDisabled = disabled && value[1] || maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: valueDayRange,\n    newDate: rangePreviewDay,\n    rangePosition\n  });\n  const handleDayMouseEnter = useEventCallback((event, newPreviewRequest) => {\n    if (!isWithinRange(utils, newPreviewRequest, valueDayRange)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  });\n  const slotsForDayCalendar = _extends({\n    day: DateRangePickerDay\n  }, slots);\n  const slotPropsForDayCalendar = _extends({}, slotProps, {\n    day: dayOwnerState => {\n      var _resolveComponentProp;\n      const {\n        day\n      } = dayOwnerState;\n      const isSelectedStartDate = isStartOfRange(utils, day, valueDayRange);\n      const isSelectedEndDate = isEndOfRange(utils, day, valueDayRange);\n      const shouldInitDragging = !shouldDisableDragEditing && valueDayRange[0] && valueDayRange[1];\n      const isElementDraggable = shouldInitDragging && (isSelectedStartDate || isSelectedEndDate);\n      let datePosition;\n      if (isSelectedStartDate) {\n        datePosition = 'start';\n      } else if (isSelectedEndDate) {\n        datePosition = 'end';\n      }\n      const isStartOfHighlighting = isDragging ? isStartOfRange(utils, day, draggingRange) : isSelectedStartDate;\n      const isEndOfHighlighting = isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate;\n      return _extends({\n        isPreviewing: shouldHavePreview ? isWithinRange(utils, day, previewingRange) : false,\n        isStartOfPreviewing: shouldHavePreview ? isStartOfRange(utils, day, previewingRange) : false,\n        isEndOfPreviewing: shouldHavePreview ? isEndOfRange(utils, day, previewingRange) : false,\n        isHighlighting: isWithinRange(utils, day, isDragging ? draggingRange : valueDayRange),\n        isStartOfHighlighting,\n        isEndOfHighlighting: isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate,\n        onMouseEnter: shouldHavePreview ? handleDayMouseEnter : undefined,\n        // apply selected styling to the dragging start or end day\n        isVisuallySelected: dayOwnerState.selected || isDragging && (isStartOfHighlighting || isEndOfHighlighting),\n        'data-position': datePosition\n      }, dragEventHandlers, {\n        draggable: isElementDraggable ? true : undefined\n      }, (_resolveComponentProp = resolveComponentProps(slotProps == null ? void 0 : slotProps.day, dayOwnerState)) != null ? _resolveComponentProp : {});\n    }\n  });\n  const calendarMonths = React.useMemo(() => Array.from({\n    length: calendars\n  }).map((_, index) => index), [calendars]);\n  const visibleMonths = React.useMemo(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (currentMonthCalendarPosition > calendars || currentMonthCalendarPosition < 1) {\n        warnInvalidCurrentMonthCalendarPosition();\n      }\n    }\n    const firstMonth = utils.addMonths(calendarState.currentMonth, 1 - currentMonthCalendarPosition);\n    return Array.from({\n      length: calendars\n    }).map((_, index) => utils.addMonths(firstMonth, index));\n  }, [utils, calendarState.currentMonth, calendars, currentMonthCalendarPosition]);\n  const focusedMonth = React.useMemo(() => {\n    var _visibleMonths$find;\n    if (!autoFocus) {\n      return null;\n    }\n\n    // The focus priority of the \"day\" view is as follows:\n    // 1. Month of the `start` date\n    // 2. Month of the `end` date\n    // 3. Month of the current date\n    // 4. First visible month\n\n    if (value[0] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[0]));\n    }\n    if (value[1] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[1]));\n    }\n    return (_visibleMonths$find = visibleMonths.find(month => utils.isSameMonth(month, now))) != null ? _visibleMonths$find : visibleMonths[0];\n  }, [utils, value, visibleMonths, autoFocus, now]);\n  return /*#__PURE__*/_jsxs(DateRangeCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(Watermark, {\n      packageName: \"x-date-pickers-pro\",\n      releaseInfo: releaseInfo\n    }), calendarMonths.map((month, index) => /*#__PURE__*/_jsxs(DateRangeCalendarMonthContainer, {\n      className: classes.monthContainer,\n      children: [calendars === 1 ? /*#__PURE__*/_jsx(PickersCalendarHeader, {\n        views: ['day'],\n        view: 'day',\n        currentMonth: calendarState.currentMonth,\n        onMonthChange: (newMonth, direction) => handleChangeMonth({\n          newMonth,\n          direction\n        }),\n        minDate: minDateWithDisabled,\n        maxDate: maxDateWithDisabled,\n        disabled: disabled,\n        disablePast: disablePast,\n        disableFuture: disableFuture,\n        reduceAnimations: reduceAnimations,\n        slots: slots,\n        slotProps: slotProps,\n        timezone: timezone\n      }) : /*#__PURE__*/_jsx(DateRangeCalendarArrowSwitcher, {\n        onGoToPrevious: selectPreviousMonth,\n        onGoToNext: selectNextMonth,\n        isPreviousHidden: index !== 0,\n        isPreviousDisabled: isPreviousMonthDisabled,\n        previousLabel: localeText.previousMonth,\n        isNextHidden: index !== calendars - 1,\n        isNextDisabled: isNextMonthDisabled,\n        nextLabel: localeText.nextMonth,\n        slots: slots,\n        slotProps: slotProps,\n        children: utils.format(visibleMonths[month], 'monthAndYear')\n      }), /*#__PURE__*/_jsx(DayCalendarForRange, _extends({\n        className: classes.dayCalendar\n      }, calendarState, baseDateValidationProps, commonViewProps, {\n        onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n        onFocusedDayChange: changeFocusedDay,\n        reduceAnimations: reduceAnimations,\n        selectedDays: value,\n        onSelectedDaysChange: handleSelectedDayChange,\n        currentMonth: visibleMonths[month],\n        TransitionProps: CalendarTransitionProps,\n        shouldDisableDate: wrappedShouldDisableDate,\n        showDaysOutsideCurrentMonth: calendars === 1 && showDaysOutsideCurrentMonth,\n        dayOfWeekFormatter: dayOfWeekFormatter,\n        loading: loading,\n        renderLoading: renderLoading,\n        slots: slotsForDayCalendar,\n        slotProps: slotPropsForDayCalendar,\n        autoFocus: month === focusedMonth,\n        fixedWeekNumber: fixedWeekNumber,\n        displayWeekNumber: displayWeekNumber,\n        timezone: timezone\n      }), index)]\n    }, month))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangeCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The number of calendars to render.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Position the current month is rendered in.\n   * @default 1\n   */\n  currentMonthCalendarPosition: PropTypes.oneOf([1, 2, 3]),\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value={[null, null]}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The initial position in the edited date range.\n   * Used when the component is not controlled.\n   * @default 'start'\n   */\n  defaultRangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, editing dates by dragging is disabled.\n   * @default false\n   */\n  disableDragEditing: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Callback fired when the value changes.\n   * @template TDate\n   * @param {DateRange<TDate>} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date range selection is complete.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the range position changes.\n   * @param {RangePosition} rangePosition The new range position.\n   */\n  onRangePositionChange: PropTypes.func,\n  /**\n   * The position in the currently edited date range.\n   * Used when the component position is controlled.\n   */\n  rangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => \"...\"\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.any)\n} : void 0;\nexport { DateRangeCalendar };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","clsx","useEventCallback","useMediaQuery","resolveComponentProps","styled","useThemeProps","unstable_composeClasses","composeClasses","Watermark","PickersCalendarHeader","applyDefaultDate","DAY_MARGIN","DayCalendar","useDefaultReduceAnimations","PickersArrowSwitcher","useCalendarState","useDefaultDates","useLocaleText","useNextMonthDisabled","usePreviousMonthDisabled","useUtils","useNow","uncapitalizeObjectKeys","DEFAULT_DESKTOP_MODE_MEDIA_QUERY","buildWarning","useControlledValueWithTimezone","getReleaseInfo","dateRangeCalendarClasses","getDateRangeCalendarUtilityClass","isEndOfRange","isRangeValid","isStartOfRange","isWithinRange","calculateRangeChange","calculateRangePreview","DateRangePickerDay","dateRangePickerDayClasses","dayClasses","rangeValueManager","useDragRange","useRangePosition","jsx","_jsx","jsxs","_jsxs","releaseInfo","DateRangeCalendarRoot","name","slot","overridesResolver","_","styles","root","display","flexDirection","DateRangeCalendarMonthContainer","monthContainer","theme","borderRight","vars","palette","divider","DateRangeCalendarArrowSwitcher","padding","alignItems","justifyContent","DAY_RANGE_SIZE","weeksContainerHeight","warnInvalidCurrentMonthCalendarPosition","DayCalendarForRange","minWidth","minHeight","dayDragging","day","cursor","rangeIntervalDayHighlightStart","rangeIntervalDayHighlightEnd","notSelectedDate","opacity","dayOutsideRangeInterval","border","grey","useDateRangeCalendarDefaultizedProps","props","_themeProps$renderLoa","_themeProps$reduceAni","_props$loading","_props$disablePast","_props$disableFuture","_themeProps$calendars","_themeProps$disableDr","utils","defaultDates","defaultReduceAnimations","themeProps","renderLoading","children","reduceAnimations","loading","disablePast","disableFuture","minDate","maxDate","calendars","disableDragEditing","useUtilityClasses","ownerState","classes","isDragging","slots","dayCalendar","DateRangeCalendar","forwardRef","inProps","ref","shouldHavePreview","defaultMatches","value","valueProp","defaultValue","referenceDate","onChange","className","shouldDisableDate","onMonthChange","defaultCalendarMonth","rangePosition","rangePositionProp","defaultRangePosition","inDefaultRangePosition","onRangePositionChange","inOnRangePositionChange","currentMonthCalendarPosition","components","componentsProps","innerSlots","slotProps","innerSlotProps","disableHighlightToday","readOnly","disabled","showDaysOutsideCurrentMonth","dayOfWeekFormatter","disableAutoMonthSwitching","autoFocus","fixedWeekNumber","displayWeekNumber","timezone","timezoneProp","other","handleValueChange","valueManager","localeText","now","handleDatePositionChange","position","handleSelectedDayChange","newDate","selectionState","allowRangeFlip","nextSelection","newRange","range","isFullRangeSelected","handleDrop","undefined","shouldDisableDragEditing","valueDayRange","useMemo","isValid","startOfDay","endOfDay","_useDragRange","onDrop","onDatePositionChange","dateRange","rangeDragDay","draggingDatePosition","dragEventHandlers","draggingRange","wrappedShouldDisableDate","dayToTest","calendarState","changeFocusedDay","changeMonth","handleChangeMonth","onMonthSwitchingAnimationEnd","disableSwitchToMonthOnDayFocus","prevValue","useRef","useEffect","_prevValue$current","_prevValue$current2","date","prevDate","current","isEqual","displayingMonthRange","currentMonthNumber","getMonth","currentMonth","requestedMonthNumber","isSameYear","newMonth","addMonths","selectNextMonth","useCallback","selectPreviousMonth","isNextMonthDisabled","isPreviousMonthDisabled","baseDateValidationProps","commonViewProps","minDateWithDisabled","maxDateWithDisabled","rangePreviewDay","setRangePreviewDay","useState","CalendarTransitionProps","onMouseLeave","previewingRange","handleDayMouseEnter","event","newPreviewRequest","slotsForDayCalendar","slotPropsForDayCalendar","dayOwnerState","_resolveComponentProp","isSelectedStartDate","isSelectedEndDate","shouldInitDragging","isElementDraggable","datePosition","isStartOfHighlighting","isEndOfHighlighting","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","onMouseEnter","isVisuallySelected","selected","draggable","calendarMonths","Array","from","length","map","index","visibleMonths","process","env","NODE_ENV","firstMonth","focusedMonth","_visibleMonths$find","find","month","isSameMonth","packageName","views","view","direction","onGoToPrevious","onGoToNext","isPreviousHidden","isPreviousDisabled","previousLabel","previousMonth","isNextHidden","isNextDisabled","nextLabel","nextMonth","format","onFocusedDayChange","selectedDays","onSelectedDaysChange","TransitionProps","propTypes","bool","oneOf","object","string","func","any","arrayOf","number","sx","oneOfType"],"sources":["C:/NewPrac/Prac/client/node_modules/@mui/x-date-pickers-pro/DateRangeCalendar/DateRangeCalendar.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\", \"defaultValue\", \"referenceDate\", \"onChange\", \"className\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"shouldDisableDate\", \"reduceAnimations\", \"onMonthChange\", \"defaultCalendarMonth\", \"rangePosition\", \"defaultRangePosition\", \"onRangePositionChange\", \"calendars\", \"currentMonthCalendarPosition\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"disableHighlightToday\", \"readOnly\", \"disabled\", \"showDaysOutsideCurrentMonth\", \"dayOfWeekFormatter\", \"disableAutoMonthSwitching\", \"autoFocus\", \"fixedWeekNumber\", \"disableDragEditing\", \"displayWeekNumber\", \"timezone\"],\n  _excluded2 = [\"isDragging\", \"rangeDragDay\", \"draggingDatePosition\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { resolveComponentProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { Watermark } from '@mui/x-license-pro';\nimport { PickersCalendarHeader } from '@mui/x-date-pickers/PickersCalendarHeader';\nimport { applyDefaultDate, DAY_MARGIN, DayCalendar, useDefaultReduceAnimations, PickersArrowSwitcher, useCalendarState, useDefaultDates, useLocaleText, useNextMonthDisabled, usePreviousMonthDisabled, useUtils, useNow, uncapitalizeObjectKeys, DEFAULT_DESKTOP_MODE_MEDIA_QUERY, buildWarning, useControlledValueWithTimezone } from '@mui/x-date-pickers/internals';\nimport { getReleaseInfo } from '../internals/utils/releaseInfo';\nimport { dateRangeCalendarClasses, getDateRangeCalendarUtilityClass } from './dateRangeCalendarClasses';\nimport { isEndOfRange, isRangeValid, isStartOfRange, isWithinRange } from '../internals/utils/date-utils';\nimport { calculateRangeChange, calculateRangePreview } from '../internals/utils/date-range-manager';\nimport { DateRangePickerDay, dateRangePickerDayClasses as dayClasses } from '../DateRangePickerDay';\nimport { rangeValueManager } from '../internals/utils/valueManagers';\nimport { useDragRange } from './useDragRange';\nimport { useRangePosition } from '../internals/hooks/useRangePosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nconst DateRangeCalendarRoot = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangeCalendarMonthContainer = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.monthContainer\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n  }\n}));\nconst DateRangeCalendarArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\nconst DAY_RANGE_SIZE = 40;\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst warnInvalidCurrentMonthCalendarPosition = buildWarning(['The `currentMonthCalendarPosition` prop must be an integer between `1` and the amount of calendars rendered.', 'For example if you have 2 calendars rendered, it should be equal to either 1 or 2.']);\nconst DayCalendarForRange = styled(DayCalendar)(({\n  theme\n}) => ({\n  minWidth: 312,\n  minHeight: weeksContainerHeight,\n  [`&.${dateRangeCalendarClasses.dayDragging}`]: {\n    [`& .${dayClasses.day}`]: {\n      cursor: 'grabbing'\n    },\n    [`& .${dayClasses.root}:not(.${dayClasses.rangeIntervalDayHighlightStart}):not(.${dayClasses.rangeIntervalDayHighlightEnd}) .${dayClasses.day}:not(.${dayClasses.notSelectedDate})`]: {\n      // we can't override `PickersDay` background color here, because it's styles take precedence\n      opacity: 0.6\n    }\n  },\n  [`&:not(.${dateRangeCalendarClasses.dayDragging}) .${dayClasses.dayOutsideRangeInterval}`]: {\n    '@media (pointer: fine)': {\n      '&:hover': {\n        border: `1px solid ${(theme.vars || theme).palette.grey[500]}`\n      }\n    }\n  }\n}));\nfunction useDateRangeCalendarDefaultizedProps(props, name) {\n  var _themeProps$renderLoa, _themeProps$reduceAni, _props$loading, _props$disablePast, _props$disableFuture, _themeProps$calendars, _themeProps$disableDr;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    renderLoading: (_themeProps$renderLoa = themeProps.renderLoading) != null ? _themeProps$renderLoa : () => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    }),\n    reduceAnimations: (_themeProps$reduceAni = themeProps.reduceAnimations) != null ? _themeProps$reduceAni : defaultReduceAnimations,\n    loading: (_props$loading = props.loading) != null ? _props$loading : false,\n    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,\n    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    calendars: (_themeProps$calendars = themeProps.calendars) != null ? _themeProps$calendars : 2,\n    disableDragEditing: (_themeProps$disableDr = themeProps.disableDragEditing) != null ? _themeProps$disableDr : false\n  });\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isDragging\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    monthContainer: ['monthContainer'],\n    dayCalendar: [isDragging && 'dayDragging']\n  };\n  return composeClasses(slots, getDateRangeCalendarUtilityClass, classes);\n};\nconst DateRangeCalendar = /*#__PURE__*/React.forwardRef(function DateRangeCalendar(inProps, ref) {\n  const props = useDateRangeCalendarDefaultizedProps(inProps, 'MuiDateRangeCalendar');\n  const shouldHavePreview = useMediaQuery(DEFAULT_DESKTOP_MODE_MEDIA_QUERY, {\n    defaultMatches: false\n  });\n  const {\n      value: valueProp,\n      defaultValue,\n      referenceDate,\n      onChange,\n      className,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      shouldDisableDate,\n      reduceAnimations,\n      onMonthChange,\n      defaultCalendarMonth,\n      rangePosition: rangePositionProp,\n      defaultRangePosition: inDefaultRangePosition,\n      onRangePositionChange: inOnRangePositionChange,\n      calendars,\n      currentMonthCalendarPosition = 1,\n      components,\n      componentsProps,\n      slots: innerSlots,\n      slotProps: innerSlotProps,\n      loading,\n      renderLoading,\n      disableHighlightToday,\n      readOnly,\n      disabled,\n      showDaysOutsideCurrentMonth,\n      dayOfWeekFormatter,\n      disableAutoMonthSwitching,\n      autoFocus,\n      fixedWeekNumber,\n      disableDragEditing,\n      displayWeekNumber,\n      timezone: timezoneProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateRangeCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  });\n  const utils = useUtils();\n  const localeText = useLocaleText();\n  const now = useNow(timezone);\n  const slots = innerSlots != null ? innerSlots : uncapitalizeObjectKeys(components);\n  const slotProps = innerSlotProps != null ? innerSlotProps : componentsProps;\n  const {\n    rangePosition,\n    onRangePositionChange\n  } = useRangePosition({\n    rangePosition: rangePositionProp,\n    defaultRangePosition: inDefaultRangePosition,\n    onRangePositionChange: inOnRangePositionChange\n  });\n  const handleDatePositionChange = useEventCallback(position => {\n    if (rangePosition !== position) {\n      onRangePositionChange(position);\n    }\n  });\n  const handleSelectedDayChange = useEventCallback((newDate, selectionState, allowRangeFlip = false) => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: value,\n      rangePosition,\n      allowRangeFlip\n    });\n    onRangePositionChange(nextSelection);\n    const isFullRangeSelected = rangePosition === 'end' && isRangeValid(utils, newRange);\n    handleValueChange(newRange, isFullRangeSelected ? 'finish' : 'partial');\n  });\n  const handleDrop = useEventCallback(newDate => {\n    handleSelectedDayChange(newDate, undefined, true);\n  });\n  const shouldDisableDragEditing = disableDragEditing || disabled || readOnly;\n\n  // Range going for the start of the start day to the end of the end day.\n  // This makes sure that `isWithinRange` works with any time in the start and end day.\n  const valueDayRange = React.useMemo(() => [value[0] == null || !utils.isValid(value[0]) ? value[0] : utils.startOfDay(value[0]), value[1] == null || !utils.isValid(value[1]) ? value[1] : utils.endOfDay(value[1])], [value, utils]);\n  const _useDragRange = useDragRange({\n      disableDragEditing: shouldDisableDragEditing,\n      onDrop: handleDrop,\n      onDatePositionChange: handleDatePositionChange,\n      utils,\n      dateRange: valueDayRange,\n      timezone\n    }),\n    {\n      isDragging,\n      rangeDragDay,\n      draggingDatePosition\n    } = _useDragRange,\n    dragEventHandlers = _objectWithoutPropertiesLoose(_useDragRange, _excluded2);\n  const ownerState = _extends({}, props, {\n    isDragging\n  });\n  const classes = useUtilityClasses(ownerState);\n  const draggingRange = React.useMemo(() => {\n    if (!valueDayRange[0] || !valueDayRange[1] || !rangeDragDay) {\n      return [null, null];\n    }\n    const newRange = calculateRangeChange({\n      utils,\n      range: valueDayRange,\n      newDate: rangeDragDay,\n      rangePosition,\n      allowRangeFlip: true\n    }).newRange;\n    return newRange[0] !== null && newRange[1] !== null ? [utils.startOfDay(newRange[0]), utils.endOfDay(newRange[1])] : newRange;\n  }, [rangePosition, rangeDragDay, utils, valueDayRange]);\n  const wrappedShouldDisableDate = React.useMemo(() => {\n    if (!shouldDisableDate) {\n      return undefined;\n    }\n    return dayToTest => shouldDisableDate(dayToTest, draggingDatePosition || rangePosition);\n  }, [shouldDisableDate, rangePosition, draggingDatePosition]);\n  const {\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value: value[0] || value[1],\n    referenceDate,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate: wrappedShouldDisableDate,\n    timezone\n  });\n  const prevValue = React.useRef(null);\n  React.useEffect(() => {\n    var _prevValue$current, _prevValue$current2;\n    const date = rangePosition === 'start' ? value[0] : value[1];\n    if (!date || !utils.isValid(date)) {\n      return;\n    }\n    const prevDate = rangePosition === 'start' ? (_prevValue$current = prevValue.current) == null ? void 0 : _prevValue$current[0] : (_prevValue$current2 = prevValue.current) == null ? void 0 : _prevValue$current2[1];\n    prevValue.current = value;\n\n    // The current date did not change, this call comes either from a `rangePosition` change or a change in the other date.\n    // In both cases, we don't want to change the visible month(s).\n    if (disableAutoMonthSwitching && prevDate && utils.isEqual(prevDate, date)) {\n      return;\n    }\n    const displayingMonthRange = calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(date);\n    if (!utils.isSameYear(calendarState.currentMonth, date) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = rangePosition === 'start' ? date :\n      // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(date, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  }, [rangePosition, value]); // eslint-disable-line\n\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.addMonths(calendarState.currentMonth, 1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.addMonths(calendarState.currentMonth, -1));\n  }, [changeMonth, calendarState.currentMonth, utils]);\n  const isNextMonthDisabled = useNextMonthDisabled(calendarState.currentMonth, {\n    disableFuture,\n    maxDate,\n    timezone\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(calendarState.currentMonth, {\n    disablePast,\n    minDate,\n    timezone\n  });\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled\n  };\n\n  // When disabled, limit the view to the selected date\n  const minDateWithDisabled = disabled && value[0] || minDate;\n  const maxDateWithDisabled = disabled && value[1] || maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: valueDayRange,\n    newDate: rangePreviewDay,\n    rangePosition\n  });\n  const handleDayMouseEnter = useEventCallback((event, newPreviewRequest) => {\n    if (!isWithinRange(utils, newPreviewRequest, valueDayRange)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  });\n  const slotsForDayCalendar = _extends({\n    day: DateRangePickerDay\n  }, slots);\n  const slotPropsForDayCalendar = _extends({}, slotProps, {\n    day: dayOwnerState => {\n      var _resolveComponentProp;\n      const {\n        day\n      } = dayOwnerState;\n      const isSelectedStartDate = isStartOfRange(utils, day, valueDayRange);\n      const isSelectedEndDate = isEndOfRange(utils, day, valueDayRange);\n      const shouldInitDragging = !shouldDisableDragEditing && valueDayRange[0] && valueDayRange[1];\n      const isElementDraggable = shouldInitDragging && (isSelectedStartDate || isSelectedEndDate);\n      let datePosition;\n      if (isSelectedStartDate) {\n        datePosition = 'start';\n      } else if (isSelectedEndDate) {\n        datePosition = 'end';\n      }\n      const isStartOfHighlighting = isDragging ? isStartOfRange(utils, day, draggingRange) : isSelectedStartDate;\n      const isEndOfHighlighting = isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate;\n      return _extends({\n        isPreviewing: shouldHavePreview ? isWithinRange(utils, day, previewingRange) : false,\n        isStartOfPreviewing: shouldHavePreview ? isStartOfRange(utils, day, previewingRange) : false,\n        isEndOfPreviewing: shouldHavePreview ? isEndOfRange(utils, day, previewingRange) : false,\n        isHighlighting: isWithinRange(utils, day, isDragging ? draggingRange : valueDayRange),\n        isStartOfHighlighting,\n        isEndOfHighlighting: isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate,\n        onMouseEnter: shouldHavePreview ? handleDayMouseEnter : undefined,\n        // apply selected styling to the dragging start or end day\n        isVisuallySelected: dayOwnerState.selected || isDragging && (isStartOfHighlighting || isEndOfHighlighting),\n        'data-position': datePosition\n      }, dragEventHandlers, {\n        draggable: isElementDraggable ? true : undefined\n      }, (_resolveComponentProp = resolveComponentProps(slotProps == null ? void 0 : slotProps.day, dayOwnerState)) != null ? _resolveComponentProp : {});\n    }\n  });\n  const calendarMonths = React.useMemo(() => Array.from({\n    length: calendars\n  }).map((_, index) => index), [calendars]);\n  const visibleMonths = React.useMemo(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (currentMonthCalendarPosition > calendars || currentMonthCalendarPosition < 1) {\n        warnInvalidCurrentMonthCalendarPosition();\n      }\n    }\n    const firstMonth = utils.addMonths(calendarState.currentMonth, 1 - currentMonthCalendarPosition);\n    return Array.from({\n      length: calendars\n    }).map((_, index) => utils.addMonths(firstMonth, index));\n  }, [utils, calendarState.currentMonth, calendars, currentMonthCalendarPosition]);\n  const focusedMonth = React.useMemo(() => {\n    var _visibleMonths$find;\n    if (!autoFocus) {\n      return null;\n    }\n\n    // The focus priority of the \"day\" view is as follows:\n    // 1. Month of the `start` date\n    // 2. Month of the `end` date\n    // 3. Month of the current date\n    // 4. First visible month\n\n    if (value[0] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[0]));\n    }\n    if (value[1] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[1]));\n    }\n    return (_visibleMonths$find = visibleMonths.find(month => utils.isSameMonth(month, now))) != null ? _visibleMonths$find : visibleMonths[0];\n  }, [utils, value, visibleMonths, autoFocus, now]);\n  return /*#__PURE__*/_jsxs(DateRangeCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(Watermark, {\n      packageName: \"x-date-pickers-pro\",\n      releaseInfo: releaseInfo\n    }), calendarMonths.map((month, index) => /*#__PURE__*/_jsxs(DateRangeCalendarMonthContainer, {\n      className: classes.monthContainer,\n      children: [calendars === 1 ? /*#__PURE__*/_jsx(PickersCalendarHeader, {\n        views: ['day'],\n        view: 'day',\n        currentMonth: calendarState.currentMonth,\n        onMonthChange: (newMonth, direction) => handleChangeMonth({\n          newMonth,\n          direction\n        }),\n        minDate: minDateWithDisabled,\n        maxDate: maxDateWithDisabled,\n        disabled: disabled,\n        disablePast: disablePast,\n        disableFuture: disableFuture,\n        reduceAnimations: reduceAnimations,\n        slots: slots,\n        slotProps: slotProps,\n        timezone: timezone\n      }) : /*#__PURE__*/_jsx(DateRangeCalendarArrowSwitcher, {\n        onGoToPrevious: selectPreviousMonth,\n        onGoToNext: selectNextMonth,\n        isPreviousHidden: index !== 0,\n        isPreviousDisabled: isPreviousMonthDisabled,\n        previousLabel: localeText.previousMonth,\n        isNextHidden: index !== calendars - 1,\n        isNextDisabled: isNextMonthDisabled,\n        nextLabel: localeText.nextMonth,\n        slots: slots,\n        slotProps: slotProps,\n        children: utils.format(visibleMonths[month], 'monthAndYear')\n      }), /*#__PURE__*/_jsx(DayCalendarForRange, _extends({\n        className: classes.dayCalendar\n      }, calendarState, baseDateValidationProps, commonViewProps, {\n        onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n        onFocusedDayChange: changeFocusedDay,\n        reduceAnimations: reduceAnimations,\n        selectedDays: value,\n        onSelectedDaysChange: handleSelectedDayChange,\n        currentMonth: visibleMonths[month],\n        TransitionProps: CalendarTransitionProps,\n        shouldDisableDate: wrappedShouldDisableDate,\n        showDaysOutsideCurrentMonth: calendars === 1 && showDaysOutsideCurrentMonth,\n        dayOfWeekFormatter: dayOfWeekFormatter,\n        loading: loading,\n        renderLoading: renderLoading,\n        slots: slotsForDayCalendar,\n        slotProps: slotPropsForDayCalendar,\n        autoFocus: month === focusedMonth,\n        fixedWeekNumber: fixedWeekNumber,\n        displayWeekNumber: displayWeekNumber,\n        timezone: timezone\n      }), index)]\n    }, month))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangeCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The number of calendars to render.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Position the current month is rendered in.\n   * @default 1\n   */\n  currentMonthCalendarPosition: PropTypes.oneOf([1, 2, 3]),\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value={[null, null]}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The initial position in the edited date range.\n   * Used when the component is not controlled.\n   * @default 'start'\n   */\n  defaultRangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, editing dates by dragging is disabled.\n   * @default false\n   */\n  disableDragEditing: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Callback fired when the value changes.\n   * @template TDate\n   * @param {DateRange<TDate>} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date range selection is complete.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the range position changes.\n   * @param {RangePosition} rangePosition The new range position.\n   */\n  onRangePositionChange: PropTypes.func,\n  /**\n   * The position in the currently edited date range.\n   * Used when the component position is controlled.\n   */\n  rangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => \"...\"\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.any)\n} : void 0;\nexport { DateRangeCalendar };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}