{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nimport { useNavigate } from 'react-router-dom';\nconst useSignup = () => {\n  _s();\n  const [iserror, setError] = useState(null);\n  const [isloading, setLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const location = useNavigate();\n  const signups = async (Email, Password, action) => {\n    console.log({\n      Email,\n      Password\n    });\n    setError(null);\n    setLoading(true);\n    const Fetch = await fetch(`http://localhost:4000/${signup}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email,\n        Password\n      })\n    });\n    const JsonData = await Fetch.json();\n    console.log(JsonData);\n    if (!Fetch.ok) {\n      // Handle the Error because if the user is not available\n      setLoading(false);\n      setError(JsonData.Error);\n    } else {\n      // Save the user to localStorage for authentication purpose\n      setLoading(false);\n      localStorage.setItem('User', JSON.stringify(JsonData));\n      dispatch({\n        type: \"Login\",\n        payload: JsonData\n      });\n      location('/');\n    }\n  };\n  return {\n    signups,\n    isloading,\n    iserror\n  };\n};\n_s(useSignup, \"ZPTRdQ9Nh9r7xx290k7cT/vvn3A=\", false, function () {\n  return [useAuthContext, useNavigate];\n});\nexport default useSignup;","map":{"version":3,"names":["useContext","useState","useAuthContext","useNavigate","useSignup","_s","iserror","setError","isloading","setLoading","dispatch","location","signups","Email","Password","action","console","log","Fetch","fetch","signup","method","headers","body","JSON","stringify","JsonData","json","ok","Error","localStorage","setItem","type","payload"],"sources":["C:/NewPrac/Prac/client/src/hooks/useSignup.js"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\nimport { useNavigate } from 'react-router-dom'\r\nconst useSignup = () => {\r\n    const [iserror, setError] = useState(null);\r\n    const [isloading, setLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n    const location = useNavigate();\r\n    const signups = async (Email, Password, action) => {\r\n        console.log({ Email, Password });\r\n        setError(null);\r\n        setLoading(true);\r\n        const Fetch = await fetch(`http://localhost:4000/${signup}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify({ Email, Password })\r\n        });\r\n\r\n        const JsonData = await Fetch.json();\r\n        console.log(JsonData);\r\n        if (!Fetch.ok) {\r\n            // Handle the Error because if the user is not available\r\n            setLoading(false);\r\n            setError(JsonData.Error);\r\n        } else {\r\n            // Save the user to localStorage for authentication purpose\r\n            setLoading(false);\r\n            localStorage.setItem('User', JSON.stringify(JsonData));\r\n            dispatch({ type: \"Login\", payload: JsonData });\r\n            location('/')\r\n        }\r\n    }\r\n    \r\n    return { signups, isloading, iserror };\r\n}\r\n\r\nexport default useSignup;\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,SAAS,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAES;EAAS,CAAC,GAAGR,cAAc,CAAC,CAAC;EACrC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,KAAK;IAC/CC,OAAO,CAACC,GAAG,CAAC;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IAChCP,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMS,KAAK,GAAG,MAAMC,KAAK,CAAE,yBAAwBC,MAAO,EAAC,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,MAAMY,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,CAAC;IACnCX,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;IACrB,IAAI,CAACR,KAAK,CAACU,EAAE,EAAE;MACX;MACAnB,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACmB,QAAQ,CAACG,KAAK,CAAC;IAC5B,CAAC,MAAM;MACH;MACApB,UAAU,CAAC,KAAK,CAAC;MACjBqB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC;MACtDhB,QAAQ,CAAC;QAAEsB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEP;MAAS,CAAC,CAAC;MAC9Cf,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC;EAED,OAAO;IAAEC,OAAO;IAAEJ,SAAS;IAAEF;EAAQ,CAAC;AAC1C,CAAC;AAAAD,EAAA,CAjCKD,SAAS;EAAA,QAGUF,cAAc,EAClBC,WAAW;AAAA;AA+BhC,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}